[{"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\themeGlobal.jsx":"3","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\userContext.jsx":"4","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\state\\workState.jsx":"5","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\state\\userState.jsx":"6","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Home.jsx":"7","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\workContext.jsx":"8","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\userReducer.jsx":"9","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Login.jsx":"10","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Work.jsx":"11","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\ObraExcel.jsx":"12","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\workReducer.jsx":"13","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Reportes.jsx":"14","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.jsx":"15","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.jsx":"16","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\helpers\\Fechas.js":"17","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\helpers\\textDate.js":"18","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.jsx":"19","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\types\\workTypes.jsx":"20","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\types\\userTypes.jsx":"21","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.jsx":"22","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormWorker\\FormWorker.jsx":"23","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableWork\\TableWork.jsx":"24","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormCode\\FormCode.jsx":"25","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableCode\\TableCode.jsx":"26","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.css.jsx":"27","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.css.jsx":"28","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Menu\\Menu.jsx":"29","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableCode\\TableCode.css.jsx":"30","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableWork\\TableWork.css.jsx":"31","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Menu\\Menu.css.jsx":"32","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.css.jsx":"33","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.css.jsx":"34","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.jsx":"35","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.jsx":"36","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepThree\\SteepThree.jsx":"37","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.jsx":"38","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.jsx":"39","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\firebase\\firebase.config.jsx":"40","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.css.jsx":"41","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.css.jsx":"42","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.css.jsx":"43","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.css.jsx":"44","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\empresasReducer.jsx":"45","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\empresasContext.jsx":"46","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\ObraMensual.jsx":"47","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\BannerHome\\BannerHome.jsx":"48","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\BannerHome\\BannerHome.css.jsx":"49","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\GridOptions\\GridOption.jsx":"50","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\GridOptions\\GridOption.css.jsx":"51","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Footer\\Footer.jsx":"52","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Footer\\Footer.css.jsx":"53","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Profile.jsx":"54","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\BannerProfile\\BannerProfile.jsx":"55","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\BannerProfile\\BannerProfile.css.jsx":"56","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\PictureProfile\\PictureProfile.jsx":"57","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\PictureProfile\\PictureProfile.css.jsx":"58","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\DataProfile\\DataProfile.jsx":"59","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\DataProfile\\DataProfile.css.jsx":"60","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Codes.jsx":"61","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\CodeActivation\\CodeActivation.jsx":"62","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\CodeExtention\\CodeExtension.jsx":"63","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\CodeActivation\\CodeActivation.css.jsx":"64","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormCode\\FormCode.css.jsx":"65","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\CodeExtention\\CodeExtension.css.jsx":"66","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Employees.jsx":"67","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\DetailWork\\DetailWork.jsx":"68","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableEmployees\\TableEmployees.jsx":"69","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableEmployees\\TableEmployess.css.jsx":"70"},{"size":203,"mtime":1614047827454,"results":"71","hashOfConfig":"72"},{"size":3907,"mtime":1614547907706,"results":"73","hashOfConfig":"72"},{"size":881,"mtime":1614475928386,"results":"74","hashOfConfig":"72"},{"size":90,"mtime":1607622103600,"results":"75","hashOfConfig":"72"},{"size":230,"mtime":1609092955678,"results":"76","hashOfConfig":"72"},{"size":194,"mtime":1614217088414,"results":"77","hashOfConfig":"72"},{"size":642,"mtime":1614218145018,"results":"78","hashOfConfig":"72"},{"size":88,"mtime":1608088590568,"results":"79","hashOfConfig":"72"},{"size":1241,"mtime":1614217154887,"results":"80","hashOfConfig":"72"},{"size":200,"mtime":1614055316831,"results":"81","hashOfConfig":"72"},{"size":4348,"mtime":1614530564654,"results":"82","hashOfConfig":"72"},{"size":15952,"mtime":1613860457526,"results":"83","hashOfConfig":"72"},{"size":1123,"mtime":1609088367819,"results":"84","hashOfConfig":"72"},{"size":3167,"mtime":1611718013592,"results":"85","hashOfConfig":"72"},{"size":3561,"mtime":1614547718870,"results":"86","hashOfConfig":"72"},{"size":612,"mtime":1607901179713,"results":"87","hashOfConfig":"72"},{"size":1481,"mtime":1613839688028,"results":"88","hashOfConfig":"72"},{"size":287,"mtime":1611380675422,"results":"89","hashOfConfig":"72"},{"size":2112,"mtime":1609094554210,"results":"90","hashOfConfig":"72"},{"size":201,"mtime":1608089106127,"results":"91","hashOfConfig":"72"},{"size":188,"mtime":1607798748734,"results":"92","hashOfConfig":"72"},{"size":5490,"mtime":1614218605556,"results":"93","hashOfConfig":"72"},{"size":7674,"mtime":1612481435155,"results":"94","hashOfConfig":"72"},{"size":9558,"mtime":1614547539263,"results":"95","hashOfConfig":"72"},{"size":4978,"mtime":1614482330043,"results":"96","hashOfConfig":"72"},{"size":8362,"mtime":1614546862966,"results":"97","hashOfConfig":"72"},{"size":330,"mtime":1607879809322,"results":"98","hashOfConfig":"72"},{"size":1299,"mtime":1614536835669,"results":"99","hashOfConfig":"72"},{"size":5819,"mtime":1612075676732,"results":"100","hashOfConfig":"72"},{"size":1837,"mtime":1614477091909,"results":"101","hashOfConfig":"72"},{"size":1873,"mtime":1614534870096,"results":"102","hashOfConfig":"72"},{"size":847,"mtime":1607880496525,"results":"103","hashOfConfig":"72"},{"size":794,"mtime":1614048065364,"results":"104","hashOfConfig":"72"},{"size":873,"mtime":1607885746514,"results":"105","hashOfConfig":"72"},{"size":4084,"mtime":1609094469885,"results":"106","hashOfConfig":"72"},{"size":542,"mtime":1614047062967,"results":"107","hashOfConfig":"72"},{"size":4146,"mtime":1609089537652,"results":"108","hashOfConfig":"72"},{"size":3843,"mtime":1609088337084,"results":"109","hashOfConfig":"72"},{"size":9902,"mtime":1608090551038,"results":"110","hashOfConfig":"72"},{"size":638,"mtime":1614483039416,"results":"111","hashOfConfig":"72"},{"size":755,"mtime":1609092884996,"results":"112","hashOfConfig":"72"},{"size":543,"mtime":1614047096923,"results":"113","hashOfConfig":"72"},{"size":289,"mtime":1608090527791,"results":"114","hashOfConfig":"72"},{"size":346,"mtime":1608088303734,"results":"115","hashOfConfig":"72"},{"size":264,"mtime":1614315129407,"results":"116","hashOfConfig":"72"},{"size":91,"mtime":1613621296157,"results":"117","hashOfConfig":"72"},{"size":8974,"mtime":1613860459791,"results":"118","hashOfConfig":"72"},{"size":521,"mtime":1614050552137,"results":"119","hashOfConfig":"72"},{"size":715,"mtime":1614054947202,"results":"120","hashOfConfig":"72"},{"size":1945,"mtime":1614547816984,"results":"121","hashOfConfig":"72"},{"size":1302,"mtime":1614055133377,"results":"122","hashOfConfig":"72"},{"size":1240,"mtime":1614056179587,"results":"123","hashOfConfig":"72"},{"size":657,"mtime":1614217915273,"results":"124","hashOfConfig":"72"},{"size":523,"mtime":1614308938559,"results":"125","hashOfConfig":"72"},{"size":300,"mtime":1614302334038,"results":"126","hashOfConfig":"72"},{"size":568,"mtime":1614302495153,"results":"127","hashOfConfig":"72"},{"size":1311,"mtime":1614304606295,"results":"128","hashOfConfig":"72"},{"size":502,"mtime":1614311455461,"results":"129","hashOfConfig":"72"},{"size":3043,"mtime":1614311422565,"results":"130","hashOfConfig":"72"},{"size":692,"mtime":1614311491462,"results":"131","hashOfConfig":"72"},{"size":1859,"mtime":1614482410764,"results":"132","hashOfConfig":"72"},{"size":1870,"mtime":1614478928884,"results":"133","hashOfConfig":"72"},{"size":1866,"mtime":1614482286020,"results":"134","hashOfConfig":"72"},{"size":735,"mtime":1614481229536,"results":"135","hashOfConfig":"72"},{"size":443,"mtime":1614481243446,"results":"136","hashOfConfig":"72"},{"size":734,"mtime":1614482149995,"results":"137","hashOfConfig":"72"},{"size":5712,"mtime":1614547457832,"results":"138","hashOfConfig":"72"},{"size":1600,"mtime":1614547341718,"results":"139","hashOfConfig":"72"},{"size":8064,"mtime":1614536034116,"results":"140","hashOfConfig":"72"},{"size":1878,"mtime":1614534914170,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"7fe30v",{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"144"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"144"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"144"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"181"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"181"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"181"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"181"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"144"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"144"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"144"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\index.js",[],["296","297"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\App.js",["298","299"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\themeGlobal.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\userContext.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\state\\workState.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\state\\userState.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Home.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\workContext.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\userReducer.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Login.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Work.jsx",["300"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\ObraExcel.jsx",["301","302","303","304"],"import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport { fechaDehoy, fechaTimeStamp } from \"../helpers/Fechas\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { empresasContext } from \"../context/empresasContext\";\r\n\r\nconst ObraExcel = () => {\r\n  let { id } = useParams();\r\n\r\n  const obra = id.split(\"-\");\r\n  //   console.log(obra);\r\n\r\n  const [total, setTotal] = React.useState(0);\r\n  const [asistieron, setAsistieron] = React.useState(0);\r\n  const [nombre, setNombre] = React.useState(\"\");\r\n  const [fecha, setFecha] = React.useState(\r\n    fechaTimeStamp(new Date(parseInt(obra[1]) * 1000))\r\n  );\r\n  const [arrayExcel, setArrayExcel] = React.useState([]);\r\n\r\n  //Obtener datos solo para obreros de la obra en general , NOMBRE EMPRESA Y ASISTENCIA TOTAL\r\n  const obtenerDatosGeneral = () => {\r\n    firebase\r\n      .database()\r\n      .ref(\"/obras/\" + obra[0])\r\n      .once(\"value\", function (snapshot) {\r\n        if (snapshot.exists()) {\r\n          const data = snapshot.val();\r\n          //   console.log(data);\r\n          setTotal(data.buildersnum);\r\n          setNombre(data.name);\r\n        } else {\r\n          console.log(\"error\");\r\n          return null;\r\n        }\r\n      });\r\n  };\r\n\r\n  //obtener data de los que asistieron  y la cantidad de obreros que asistieron\r\n  const obtenerDataAsistenciaGeneral = () => {\r\n    firebase\r\n      .database()\r\n      .ref(\"/obras/\" + obra[0])\r\n      .child(\"asistencia\")\r\n      .child(obra[1])\r\n      .once(\"value\", function (snapshot) {\r\n        if (snapshot.exists()) {\r\n          const data = snapshot.val();\r\n          const arrayExcel = getDatosLista(Object.values(data));\r\n          setArrayExcel(getDatosLista(Object.values(data)));\r\n          setAsistieron(arrayExcel.length);\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n  };\r\n\r\n  //Context que trae las empresas guardadas , empieza en []\r\n  const { empresaArray, dispatchEmpresa } = React.useContext(empresasContext);\r\n\r\n  //obtener empresas\r\n  const obtenerDataPorEmpresas = () => {\r\n    //Primero evaualos si la obra tiene emppresas , campo enterprises\r\n    firebase\r\n      .database()\r\n      .ref(\"/obras/\" + obra[0])\r\n      .once(\"value\", function (snapshot) {\r\n        if (snapshot.exists()) {\r\n          const data = snapshot.val().enterprises;\r\n          //Si tiene recorremos la data\r\n          if (data) {\r\n            for (const item of Object.values(data)) {\r\n              //Asigamos los valores a un objeto\r\n              let objtEmpresa = {};\r\n              const nameEnterprises = item.enterprise;\r\n              const numberTotal = item.numbuilders;\r\n              objtEmpresa.name = nameEnterprises;\r\n              objtEmpresa.total = numberTotal;\r\n              //   console.log(objtEmpresa);\r\n              //Vamos a contar cuantos asistieron\r\n              firebase\r\n                .database()\r\n                .ref(\"/obras/\" + obra[0])\r\n                .child(\"asistencia\")\r\n                .child(obra[1])\r\n                .once(\"value\", function (snapshot) {\r\n                  if (snapshot.exists()) {\r\n                    //Se crea el contador\r\n                    let countAsistencia = 0;\r\n                    const dataAsistencia = snapshot.val();\r\n                    //si existe el campo asistencia  recorremos la data\r\n                    if (dataAsistencia) {\r\n                      for (const item of Object.values(dataAsistencia)) {\r\n                        // si el campo enterprise del obrero coincide con el nombre de la obra se suma\r\n                        if (nameEnterprises === item.enterprise) {\r\n                          countAsistencia = countAsistencia + 1;\r\n                        }\r\n                      }\r\n                      //agregamos el contador al objeto\r\n                      objtEmpresa.count = countAsistencia;\r\n                      //   console.log(objtEmpresa);\r\n                      //Evaluamos para que no se repita las empresas en el Array del context\r\n                      const exist = empresaArray.empresas.some(\r\n                        (item) => item.name === objtEmpresa.name\r\n                      );\r\n                      console.log(exist);\r\n                      //Si no se repite realizamos el llenado de la empresas al Array de empresas\r\n                      if (!exist) {\r\n                        dispatchEmpresa({\r\n                          type: \"añadir\",\r\n                          payload: objtEmpresa,\r\n                        });\r\n                      }\r\n                    }\r\n                  }\r\n                });\r\n            }\r\n          }\r\n        } else {\r\n          console.log(\"error\");\r\n          return null;\r\n        }\r\n      });\r\n  };\r\n\r\n  // convertir array en excel\r\n  const getDatosLista = (data) => {\r\n    let exportData = [];\r\n    data.forEach((l) => {\r\n      let object = {\r\n        NOMBRE: l.names,\r\n        DNI: l.dni,\r\n        \"HORA DE INGRESO\": l.timeenter === \"\" ? \"SIN ASIGNAR \" : l.timeenter,\r\n        \"HORA DE SALIDA\": l.timeexit === \"\" ? \"SIN ASGINAR\" : l.timeexit,\r\n        CATEGORIA: l.category === \"\" ? \"SIN ASGINAR\" : l.category,\r\n        OCUPACION: l.charge === \"\" ? \"SIN ASGINAR\" : l.charge,\r\n        PLANILLA: l.payroll === \"\" ? \"SIN ASGINAR\" : l.payroll,\r\n        \"FECHA DE NACIMIENTO\": l.dayborn === \"\" ? \"SIN ASGINAR\" : l.dayborn,\r\n        \"FECHA DE VENCIMIENTO DE DNI\":\r\n          l.expirationdatedni === \"\" ? \"SIN ASGINAR\" : l.expirationdatedni,\r\n        EMPRESA: l.enterprise === \"\" ? \"SIN ASGINAR\" : l.enterprise,\r\n        RUC: l.enterpriseruc === \"\" ? \"SIN ASGINAR\" : l.enterpriseruc,\r\n      };\r\n      exportData.push(object);\r\n    });\r\n    //ordernar alfabeticamente\r\n    exportData.sort(function (a, b) {\r\n      if (a.NOMBRE > b.NOMBRE) {\r\n        return 1;\r\n      }\r\n      if (a.NOMBRE < b.NOMBRE) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    return exportData;\r\n  };\r\n\r\n  const getDatosListaEmpresa = (data) => {\r\n    let exportData = [];\r\n    if (data !== []) {\r\n      data.forEach((l) => {\r\n        let object = {\r\n          EMPRESA: l.name,\r\n          ASISTIERON: l.count,\r\n          FALTARON: parseInt(l.total) - l.count,\r\n          TOTAL: parseInt(l.total),\r\n        };\r\n        exportData.push(object);\r\n      });\r\n    }\r\n    return exportData;\r\n  };\r\n\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  //convertir a excel y descargar\r\n  const exportToCSV = () => {\r\n    const ws = XLSX.utils.json_to_sheet(arrayExcel);\r\n    const we = XLSX.utils.json_to_sheet(\r\n      getDatosListaEmpresa(empresaArray.empresas)\r\n    );\r\n    const wb = {\r\n      Sheets: { Listado_General: ws, Listado_Empresas: we },\r\n      SheetNames: [\"Listado_General\", \"Listado_Empresas\"],\r\n    };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    const fileName = `${nombre}-${fecha}`;\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  //imprimir PDF obra en general\r\n  const printDocument = () => {\r\n    const input = document.getElementById(\"graphdiv\");\r\n    html2canvas(input).then((canvas) => {\r\n      var imgWidth = 200;\r\n      //   var pageHeight = 290;\r\n      var imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      //   var heightLeft = imgHeight;\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      //   let y = 500;\r\n      var position = 0;\r\n      //   var heightLeft = imgHeight;\r\n      pdf.addImage(imgData, \"JPEG\", 0, position, imgWidth, imgHeight);\r\n      pdf.save(`${nombre}-${fecha}`);\r\n    });\r\n  };\r\n\r\n  //Imprimir pdf por empresas\r\n  const printDocumentEnterprises = () => {\r\n    const input = document.getElementById(\"graphenterprises\");\r\n    html2canvas(input).then((canvas) => {\r\n      var imgWidth = 200;\r\n      //   var pageHeight = 290;\r\n      var imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      //   var heightLeft = imgHeight;\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      var position = 0;\r\n      //   var heightLeft = imgHeight;\r\n      pdf.addImage(imgData, \"JPEG\", 0, position, imgWidth, imgHeight);\r\n      pdf.save(`${nombre}Empresas-${fecha}`);\r\n    });\r\n  };\r\n\r\n  //Imprimiendo pdf\r\n  const printPDF = () => {\r\n    printDocument();\r\n    printDocumentEnterprises();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    obtenerDatosGeneral();\r\n    obtenerDataPorEmpresas();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if ((nombre !== \"\") & (total !== 0)) {\r\n      obtenerDataAsistenciaGeneral();\r\n    }\r\n  }, [nombre, total]);\r\n\r\n  return (\r\n    <>\r\n      {arrayExcel !== [] && (\r\n        <div\r\n          style={{\r\n            maxWidth: \"1400px\",\r\n            margin: \"auto\",\r\n            padding: \"20px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button onClick={exportToCSV} color=\"primary\" variant=\"outlined\">\r\n            DESCARGAR EXCEL\r\n          </Button>\r\n          <Button onClick={printPDF} color=\"primary\" variant=\"outlined\">\r\n            DESCARGAR PDF\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <div\r\n        id=\"graphdiv\"\r\n        style={{ maxWidth: \"1400px\", margin: \"auto\", padding: \"20px\" }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\" }}>Obra: {nombre}</h1>\r\n        <h2 style={{ textAlign: \"center\" }}>Fecha: {fecha}</h2>\r\n        <br></br>\r\n        <Bar\r\n          height={400}\r\n          width={900}\r\n          data={{\r\n            labels: [\"Asistieron\", \"Se esperaba\"],\r\n            datasets: [\r\n              {\r\n                data: [asistieron, total, 1, 5],\r\n                backgroundColor: [\r\n                  \"rgba(255, 99, 132, 0.2)\",\r\n                  \"rgba(54, 162, 235, 0.2)\",\r\n                ],\r\n                borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\"],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            legend: {\r\n              display: false,\r\n            },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <div\r\n              style={{\r\n                background: \"rgba(255, 99, 132, 0.2)\",\r\n                border: \"1px solid rgba(255, 99, 132, 1)\",\r\n                height: \"20px\",\r\n                width: \"40px\",\r\n                marginRight: 5,\r\n              }}\r\n            ></div>\r\n            <h3>ASISTIERON : {asistieron} Personas</h3>\r\n          </div>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <div\r\n              style={{\r\n                background: \"rgba(54, 162, 235, 0.2)\",\r\n                border: \"1px solid rgba(54, 162, 235, 1)\",\r\n                height: \"20px\",\r\n                width: \"40px\",\r\n                marginRight: 5,\r\n              }}\r\n            ></div>\r\n            <h3>SE ESPERABA : {total} Personas</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"graphenterprises\">\r\n        <br></br>\r\n        <br></br>\r\n        <h1 style={{ textAlign: \"center\" }}>Obra: {nombre}</h1>\r\n        <h2 style={{ textAlign: \"center\" }}>Fecha: {fecha}</h2>\r\n        <br></br>\r\n\r\n        <Grid container>\r\n          {empresaArray.empresas === [] && (\r\n            <h1>Esta obra no tiene empresas asignadas</h1>\r\n          )}\r\n          {empresaArray.empresas !== [] &&\r\n            empresaArray.empresas.map((item) => {\r\n              return (\r\n                <Grid item md={6}>\r\n                  <h3 style={{ textAlign: \"center\" }}>{item.name}</h3>\r\n                  <Bar\r\n                    height={400}\r\n                    width={900}\r\n                    data={{\r\n                      labels: [\"Asistieron\", \"Faltaron\", \"Total\"],\r\n                      datasets: [\r\n                        {\r\n                          data: [\r\n                            item.count,\r\n                            parseInt(item.total) - item.count,\r\n                            parseInt(item.total),\r\n                            1,\r\n                            5,\r\n                            20,\r\n                          ],\r\n                          backgroundColor: [\r\n                            \"rgba(255, 99, 132, 0.2)\",\r\n                            \"rgba(200, 162, 235, 0.2)\",\r\n                            \"rgba(54, 162, 235, 0.2)\",\r\n                          ],\r\n                          borderColor: [\r\n                            \"rgba(255, 99, 132, 1)\",\r\n                            \"rgba(200, 162, 235, 1)\",\r\n                            \"rgba(54, 162, 235, 1)\",\r\n                          ],\r\n                          borderWidth: 1,\r\n                        },\r\n                      ],\r\n                    }}\r\n                    options={{\r\n                      legend: {\r\n                        display: false,\r\n                      },\r\n                      scales: {\r\n                        yAxes: [\r\n                          {\r\n                            ticks: {\r\n                              beginAtZero: true,\r\n                            },\r\n                          },\r\n                        ],\r\n                      },\r\n                    }}\r\n                  />\r\n                  <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-around\" }}\r\n                  >\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <div\r\n                        style={{\r\n                          background: \"rgba(255, 99, 132, 0.2)\",\r\n                          border: \"1px solid rgba(255, 99, 132, 1)\",\r\n                          height: \"20px\",\r\n                          width: \"40px\",\r\n                          marginRight: 5,\r\n                        }}\r\n                      ></div>\r\n                      <h3>ASISTIERON : {item.count} Personas</h3>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <div\r\n                        style={{\r\n                          background: \"rgba(200, 162, 235, 0.2)\",\r\n                          border: \"1px solid rgba(200, 162, 235, 1)\",\r\n                          height: \"20px\",\r\n                          width: \"40px\",\r\n                          marginRight: 5,\r\n                        }}\r\n                      ></div>\r\n                      <h3>\r\n                        FALTARON : {parseInt(item.total) - item.count} Personas\r\n                      </h3>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <div\r\n                        style={{\r\n                          background: \"rgba(54, 162, 235, 0.2)\",\r\n                          border: \"1px solid rgba(54, 162, 235, 1)\",\r\n                          height: \"20px\",\r\n                          width: \"40px\",\r\n                          marginRight: 5,\r\n                        }}\r\n                      ></div>\r\n                      <h3>SE ESPERABA : {parseInt(item.total)} Personas</h3>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObraExcel;\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\workReducer.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Reportes.jsx",["305","306","307"],"import React from 'react'\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\n\r\nconst Reportes = () => {\r\n\r\n    const [data, setdata] = React.useState({\r\n        datos :[]\r\n    })        \r\n    const [info,setInfo] = React.useState({\r\n        emailreport:'',\r\n        dniris:''\r\n    })\r\n\r\n    const array = []\r\n\r\n    const addArray = (array) =>{\r\n        setdata({\r\n            datos:array\r\n        })\r\n    }\r\n\r\n    \r\n    const handleChange = (e) =>{\r\n\r\n        console.log(e.target.value)\r\n        firebase.database().ref('/obras').child(e.target.value).once('value',function(snapshot){\r\n            console.log('entra')\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().asistencia\r\n                    let name = ChildSnapshot.val().name\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name\r\n                    }\r\n                    console.log(numberdoc)\r\n                   \r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        firebase.database().ref('/obras').once('value',function(snapshot){\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().id\r\n                    let name = ChildSnapshot.val().name\r\n                    let asistencia = ChildSnapshot.val().asistencia\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name,\r\n                        asistencia\r\n                    }\r\n                    console.log(numberdoc)\r\n                    console.log(asistencia)\r\n                    array.push(objeto)\r\n                    // console.log(array)\r\n                    addArray(array)\r\n                }\r\n            )\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{maxWidth:900,margin:'auto'}}>\r\n                <FormControl variant=\"outlined\" fullWidth={true}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Encargado de Asistencia\r\n                        </InputLabel>\r\n                        <Select\r\n                            value={info.dniris}\r\n                            onChange={handleChange}\r\n                            label=\"Encargado de Asistencia\"\r\n                            name=\"dniris\"\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                            <em>Escoger encargado</em>\r\n                            </MenuItem>\r\n                            {\r\n                               data.datos.map((item,index) => {\r\n                                return(\r\n                                    <MenuItem value={item.numberdoc} key={index} >{item.name}</MenuItem>\r\n                                )\r\n                               }) \r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reportes\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.jsx",["308","309"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\helpers\\Fechas.js",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\helpers\\textDate.js",[],["310","311"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\types\\workTypes.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\types\\userTypes.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.jsx",["312","313","314"],"import {\r\n  Button,\r\n  Divider,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { userContext } from \"../../context/userContext\";\r\nimport { LoginwithFirebase, UserType } from \"../../firebase/firebase.config\";\r\nimport ButtonPrimary from \"../ButtonPrimary/ButtonPrimary\";\r\nimport { useStylesFormLogin } from \"./FormLogin.css\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\nimport background from \"../../assets/img/fondoLogin.svg\";\r\nimport logo from \"../../assets/img/logoLogin.svg\";\r\nimport logoFb from \"../../assets/img/logoFb.svg\";\r\nimport logoInsta from \"../../assets/img/logoInsta.svg\";\r\nimport logoLinkedin from \"../../assets/img/logoLink.svg\";\r\nimport logoYt from \"../../assets/img/logoYt.svg\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nimport {\r\n  ADD_OTHERDATOS_USER,\r\n  ADD_UID_USER,\r\n  LOGIN_USER,\r\n} from \"../../types/userTypes\";\r\n\r\nconst FormLogin = () => {\r\n  const classes = useStylesFormLogin();\r\n\r\n  const [login, setLogin] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = login;\r\n\r\n  const handleChange = (e) => {\r\n    setLogin({\r\n      ...login,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const { dispatch } = useContext(userContext);\r\n\r\n  const LoginwithFirebase = (email, password) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        const uid = user.user.uid;\r\n        dispatch({\r\n          type: ADD_UID_USER,\r\n          payload: uid,\r\n        });\r\n        UserType(uid);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  const UserType = (uid) => {\r\n    firebase\r\n      .database()\r\n      .ref(\"/users/\" + uid)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        const type = snapshot.val() && snapshot.val().type;\r\n        const name = snapshot.val() && snapshot.val().name;\r\n        const email = snapshot.val() && snapshot.val().email;\r\n        const cellphone = snapshot.val() && snapshot.val().cellphone;\r\n        const dayofbirth = snapshot.val() && snapshot.val().dayofbirth;\r\n        const profilepic = snapshot.val() && snapshot.val().profilepic;\r\n\r\n        dispatch({\r\n          type: ADD_OTHERDATOS_USER,\r\n          payload: {\r\n            type,\r\n            name,\r\n            email,\r\n            cellphone,\r\n            dayofbirth,\r\n            profilepic\r\n          },\r\n        });\r\n        dispatch({\r\n          type: LOGIN_USER,\r\n          payload: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    LoginwithFirebase(email, password);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.fondo_login}>\r\n      <div className={classes.container_login}>\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginBottom: \"50px\",\r\n          }}\r\n        >\r\n          <img src={logo} alt=\"logo\"></img>\r\n        </div>\r\n        <div className={classes.form_login}>\r\n          <div className={classes.form_title}>\r\n            <Typography variant=\"h5\" className={classes.form_text_title}>\r\n              Bienvenido a tu App Cosntructora\r\n            </Typography>\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n          <TextField\r\n            type=\"email\"\r\n            label=\"Correo Electrónico\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Ingrese correo electrónico\"\r\n            onChange={handleChange}\r\n            name=\"email\"\r\n            value={email}\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <br></br>\r\n          <TextField\r\n            type=\"password\"\r\n            label=\"Contraseña\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Ingrese contraseña\"\r\n            onChange={handleChange}\r\n            name=\"password\"\r\n            value={password}\r\n            autoComplete=\"off\"\r\n            fullWidth\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <LockIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <br></br>\r\n          <br></br>\r\n          <ButtonPrimary text=\"INGRESAR\" onClick={handleLogin} />\r\n          <br></br>\r\n          <Divider style={{ background: \"#C4C4C4\", width: \"50%\" }}></Divider>\r\n          <Button style={{ textTransform: \"initial\" }}>\r\n            Olvidate tu contraseña\r\n          </Button>\r\n          <br></br>\r\n          <div>\r\n            <img src={logoFb} alt=\"logoFb\" style={{ margin: \"0px 8px\" }}></img>\r\n            <img\r\n              src={logoInsta}\r\n              alt=\"logoInsta\"\r\n              style={{ margin: \"0px 8px\" }}\r\n            ></img>\r\n            <img\r\n              src={logoLinkedin}\r\n              alt=\"logoLinkedin\"\r\n              style={{ margin: \"0px 8px\" }}\r\n            ></img>\r\n            <img src={logoYt} alt=\"logoYt\" style={{ margin: \"0px 8px\" }}></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormLogin;\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormWorker\\FormWorker.jsx",["315","316","317","318","319"],"import { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'\r\nimport React , { useState, useEffect } from 'react'\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nconst FormWorker = () => {\r\n\r\n    const [worker, setWorker] = useState({\r\n      name:'',\r\n      lastname:'',\r\n      dayborn: new Date(),\r\n      typedoc:'',\r\n      numberdoc:'',\r\n      category:'',\r\n      status:''\r\n    })\r\n    \r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n      new Date()\r\n    );\r\n\r\n    const handleDateChange = (date) => {\r\n      setSelectedDate(date);\r\n    };\r\n\r\n    useEffect(() => {\r\n      setWorker({\r\n        ...worker,\r\n        dayborn: selectedDate,\r\n\r\n      });\r\n    }, [selectedDate]);\r\n\r\n\r\n    const handleChange = (e) =>{\r\n      setWorker({\r\n          ...worker,\r\n          [e.target.name]:e.target.value\r\n      })\r\n    }\r\n\r\n\r\n    console.log(worker)\r\n\r\n\r\n    function getDateFormat(date) {\r\n      const newDate = new Date(date);\r\n      let year = newDate.getFullYear().toString();\r\n      let month = (newDate.getMonth() + 1).toString();\r\n      let day = newDate.getDate().toString();\r\n    \r\n      day.length == 1 && (day = '0' + day);\r\n      month.length == 1 && (month = '0' + month);\r\n      let yyyymmdd = day + '/' + month + '/' + year;\r\n  \r\n      return yyyymmdd;  \r\n    }\r\n\r\n    const handleNewWorker = () => {\r\n\r\n      // firebase.database().ref('obreros').child(worker.numberdoc).on()\r\n\r\n      // firebase.database().ref('/obreros/' + worker.numberdoc).once('value')\r\n      // .then((snapshot)=>{\r\n      //   if(snapshot.exists){\r\n\r\n      //   }else{\r\n          \r\n      //   }\r\n      // })\r\n      \r\n      // firebase.database().ref('/obreros/' + worker.numberdoc).set({\r\n      //   typedoc: worker.typedoc,\r\n      //   dayborn: getDateFormat(worker.dayborn),\r\n      //   dni: worker.numberdoc,\r\n      //   name : worker.name,\r\n      //   lastname: worker.lastname,\r\n      //   obraid:'',\r\n      //   category:worker.category,\r\n      //   status:worker.status\r\n      // }).catch(error =>{\r\n      //   console.log(error)\r\n      // })\r\n      \r\n      \r\n      \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <div style={{margin:'20px'}}>\r\n        <Grid container spacing={2} style={{padding:'15px 0px'}}>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              fullWidth={true}\r\n              type=\"email\"\r\n              label=\"Nombres del obrero\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ingrese nombres del obrero\"\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              value={worker.name}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              fullWidth={true}\r\n              type=\"email\"\r\n              label=\"Apellidos del obrero\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ingrese apellidos del obrero\"\r\n              onChange={handleChange}\r\n              name=\"lastname\"\r\n              value={worker.lastname}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} >\r\n            <Grid item md={6} sm={6} xs={12}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardDatePicker\r\n                            style={{width:'100%'}}\r\n                            autoOk\r\n                            minDate={new Date()}\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            label=\"Fecha de nacimiento\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                        />\r\n              </MuiPickersUtilsProvider>  \r\n            </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} style={{padding:'15px 0px'}}>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Tipo de documento\r\n              </InputLabel>\r\n              <Select\r\n                value={worker.typedoc}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"typedoc\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger tipo de documento</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"DNI\">DNI</MenuItem>\r\n                <MenuItem value=\"Pasaporte\">Pasaporte</MenuItem>\r\n                <MenuItem value=\"Carnet de Extranjeria\">Carnet de Extranjeria</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              fullWidth={true}\r\n              type=\"email\"\r\n              label=\"Numero de documento\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ingrese numero de documento\"\r\n              onChange={handleChange}\r\n              name=\"numberdoc\"\r\n              value={worker.numberdoc}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} style={{padding:'15px 0px'}}>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Categoria\r\n              </InputLabel>\r\n              <Select\r\n                value={worker.category}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"category\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger categoria</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Albañil\">Albañil</MenuItem>\r\n                <MenuItem value=\"Carpintero\">Carpintero</MenuItem>\r\n                <MenuItem value=\"Electricista\">Electricista</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Estado\r\n              </InputLabel>\r\n              <Select\r\n                value={worker.status}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"status\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger estado</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Activo\">Activo</MenuItem>\r\n                <MenuItem value=\"De baja\">De baja</MenuItem>\r\n                <MenuItem value=\"Suspendido\">Suspendido</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{display:'flex',justifyContent:'center'}}>\r\n          <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          onClick={handleNewWorker}>Registrar Obrero</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default FormWorker\r\n",["320","321"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableWork\\TableWork.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormCode\\FormCode.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableCode\\TableCode.jsx",["322"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Menu\\Menu.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableCode\\TableCode.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableWork\\TableWork.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Menu\\Menu.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.jsx",["323"],"\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { workContext } from '../../context/workContext'\r\nimport ButtonPrimary from '../ButtonPrimary/ButtonPrimary'\r\nimport { useStylesSteepComplete } from './SteepComplete.css'\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nconst SteepComplete = ({handleReset}) => {\r\n\r\n\r\n    const {workinit} = React.useContext(workContext)\r\n    \r\n\r\n    const classes= useStylesSteepComplete()\r\n\r\n    const handleConfirm = () => {\r\n\r\n        const dateTime = Date.now();\r\n        const timestamp = Math.floor(dateTime / 1000);\r\n\r\n        firebase.database().ref('/obras/' + timestamp).set({\r\n            datefinished: workinit.day_init,\r\n            datestart: workinit.day_final,\r\n            id: timestamp,\r\n            name : workinit.namework,\r\n            timefinish: workinit.time_init,\r\n            timestart: workinit.time_final,\r\n          });\r\n\r\n        for(const dni of workinit.workers){\r\n            firebase.database().ref(\"obreros\").child(dni).child(\"obraid\").set(timestamp)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Typography className={classes.title}>{workinit.namework}</Typography>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Fecha Inicial:</strong> {workinit.day_init}\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Fecha Final:</strong> {workinit.day_final}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Hora de Entrada:</strong> {workinit.time_init}\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Hora de Salida:</strong> {workinit.time_final}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Encargado de Asistencia:</strong> {workinit.workris}\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Email para Reportes:</strong> {workinit.emailreport}\r\n                </Grid>\r\n            </Grid>\r\n            <Typography className={classes.grid} style={{textAlign:'center'}}><strong>Obreros</strong></Typography>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={6} className={classes.griditem}>\r\n                    <Typography><strong>Nombre</strong></Typography>\r\n                    {\r\n                        workinit.workersname.map(item =>{\r\n                            return <Typography>{item}</Typography>\r\n                        })\r\n                    }\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={6} className={classes.griditem}>\r\n                    <Typography><strong>DNI</strong></Typography>\r\n                    {\r\n                        workinit.workers.map(item =>{\r\n                            return <Typography>{item}</Typography>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditembtn}>\r\n                    <ButtonPrimary text=\"Confirmar\" onClick={handleConfirm}></ButtonPrimary>\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditembtn}>\r\n                    <ButtonPrimary text=\"Rehacer\" onClick={handleReset}></ButtonPrimary>\r\n                </Grid>\r\n            </Grid>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepComplete\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepThree\\SteepThree.jsx",["324"],"import { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\nimport { workContext } from '../../context/workContext';\r\nimport { STEPTHREE_WORK } from '../../types/workTypes';\r\n\r\n\r\nconst SteepThree = ({handleNext}) => {\r\n\r\n\r\n    const [data, setdata] = useState({\r\n        datos :[]\r\n    })\r\n\r\n    const [info,setInfo] = useState({\r\n        emailreport:'',\r\n        dniris:''\r\n    })\r\n\r\n    const array = []\r\n\r\n    const addArray = (array) =>{\r\n        setdata({\r\n            datos:array\r\n        })\r\n    }\r\n\r\n\r\n    const handleChange = (e) =>{\r\n        console.log(e.target.name)\r\n        setInfo({\r\n            ...info,\r\n            [e.target.name]:e.target.value\r\n        })\r\n      }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref('/RIS').once('value',function(snapshot){\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().id\r\n                    let name = ChildSnapshot.val().name\r\n                    // let lastname = ChildSnapshot.val().lastname\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name,\r\n                        // lastname\r\n                    }\r\n                    array.push(objeto)\r\n                    console.log(array)\r\n                    addArray(array)\r\n                }\r\n            )\r\n        })\r\n    }, [])\r\n\r\n    const {dispatchwork} = React.useContext(workContext)\r\n\r\n    const handleEnvio = () => {\r\n        dispatchwork({\r\n            type: STEPTHREE_WORK,\r\n            payload:{\r\n                workris: info.dniris,\r\n                emailreport: info.emailreport\r\n            }\r\n        })\r\n        handleNext()\r\n    }\r\n\r\n    console.log(info)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container >\r\n                <Grid item xs={12} md={12} sm={12}>\r\n                    <TextField\r\n                    fullWidth={true}\r\n                    type=\"email\"\r\n                    label=\"Correo electronico para reportes\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese correo electronico\"\r\n                    onChange={handleChange}\r\n                    name=\"emailreport\"\r\n                    value={info.emailreport}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <br></br>\r\n            <Grid container >\r\n                <Grid item xs={12} md={12} sm={12}>\r\n                    <FormControl variant=\"outlined\" fullWidth={true}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Encargado de Asistencia\r\n                        </InputLabel>\r\n                        <Select\r\n                            value={info.dniris}\r\n                            onChange={handleChange}\r\n                            label=\"Encargado de Asistencia\"\r\n                            name=\"dniris\"\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                            <em>Escoger encargado</em>\r\n                            </MenuItem>\r\n                            {\r\n                               data.datos.map((item,index) => {\r\n                                return(\r\n                                    <MenuItem value={item.numberdoc} key={index} >{item.name}</MenuItem>\r\n                                )\r\n                               }) \r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <br></br>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                <Button variant=\"contained\" color=\"primary\" \r\n                onClick={handleEnvio} \r\n                // className={classes.btncontinuar}\r\n                >Continuar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepThree\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.jsx",["325"],"import React , { useState, useEffect, useContext }from 'react'\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { useStylesSteppTwo } from './SteepTwo.css'\r\nimport { workContext } from '../../context/workContext';\r\nimport { STEPTWO_WORK } from '../../types/workTypes';\r\n\r\nconst SteepTwo = ({handleNext}) => {\r\n\r\n    const classes = useStylesSteppTwo()\r\n\r\n    const [data, setdata] = useState({\r\n        datos :[]\r\n    })\r\n\r\n    const [workers, setworkers] = useState({\r\n        obreros:[],\r\n        obrerosname:[]\r\n    })\r\n\r\n    const array = []\r\n\r\n    const {dispatchwork} = useContext(workContext)\r\n\r\n\r\n    const addArray = (array) =>{\r\n        setdata({\r\n            datos:array\r\n        })\r\n    }\r\n\r\n    const getValue = (e) =>{\r\n        console.log(e.target.value)\r\n        const exist = workers.obreros.some(item => item === e.target.value)\r\n        const existname = workers.obrerosname.some(item => item === e.target.name)\r\n\r\n        if(exist && existname){\r\n            const filter = workers.obreros.filter(item => item !== e.target.value)\r\n            const filtername = workers.obrerosname.filter(item => item !== e.target.name)\r\n            setworkers({\r\n                ...workers,\r\n                obreros:filter,\r\n                obrerosname:filtername\r\n            })\r\n\r\n        }else{\r\n            setworkers({\r\n                ...workers,\r\n                obreros:[...workers.obreros,e.target.value],\r\n                obrerosname:[...workers.obrerosname,e.target.name]\r\n\r\n            })\r\n        }             \r\n    }\r\n\r\n    console.log(workers) \r\n\r\n    const handleEnvio = async () =>{\r\n\r\n        await dispatchwork({\r\n            type: STEPTWO_WORK,\r\n            payload:{\r\n                workers: workers.obreros,\r\n                workersname: workers.obrerosname,\r\n                totalworkers: workers.obreros.length\r\n            }\r\n        })\r\n        handleNext()\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref('/obreros').once('value',function(snapshot){\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().dni\r\n                    let name = ChildSnapshot.val().name\r\n                    let lastname = ChildSnapshot.val().lastname\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name,\r\n                        lastname\r\n                    }\r\n                    array.push(objeto)\r\n                    console.log(array)\r\n                    addArray(array)\r\n                }\r\n            )\r\n        })\r\n    }, [])\r\n\r\n\r\n    console.log(data.datos)\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" color=\"initial\">Lista de obreros</Typography>\r\n            {\r\n               data.datos.map((item,index) => {\r\n                   return (\r\n                    <div style={{display:'flex',alignItems:'center'}} key={index}>\r\n                    <Checkbox \r\n                    color=\"primary\" \r\n                    value={item.numberdoc}\r\n                    name={`${item.name} ${item.lastname}`}\r\n                    onChange={(e)=>getValue(e)}></Checkbox>\r\n                    <Typography variant=\"body2\" color=\"initial\">{item.name} {item.lastname}</Typography>\r\n                    </div>\r\n                   )\r\n               }) \r\n            }\r\n             <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEnvio} className={classes.btncontinuar}>Continuar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepTwo\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.jsx",["326"],"/* eslint-disable eqeqeq */\r\nimport { Button, Grid, TextField } from '@material-ui/core'\r\nimport React , { useState , useEffect, useContext } from 'react'\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\n// import firebase from 'firebase/app';\r\n// import \"firebase/auth\";\r\n// import \"firebase/database\"\r\n\r\nimport { useStylesSteppOne } from './SteepOne.css'\r\nimport { workContext } from '../../context/workContext';\r\nimport { STEPONE_WORK } from '../../types/workTypes';\r\n\r\nconst SteepOne = ({handleNext,handleBack}) => {\r\n\r\n\r\n    const classes = useStylesSteppOne()\r\n\r\n    const [ obra, setObra ] = useState({\r\n        name:'',\r\n        day_init: new Date(),\r\n        day_final: new Date(),\r\n        hour_init: new Date(),\r\n        hour_final: new Date()\r\n    })\r\n\r\n    const handleChange = (e) =>{\r\n        setObra({\r\n            ...obra,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n        new Date()\r\n    );\r\n\r\n    const [selectedDate1, setSelectedDate1] = React.useState(\r\n        new Date()\r\n    );\r\n\r\n    const [selectedDate2, setSelectedDate2] = React.useState(\r\n        new Date()\r\n    );\r\n\r\n    const [selectedDate3, setSelectedDate3] = React.useState(\r\n        new Date()\r\n      );\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const handleDateChange1 = (date) => {\r\n        setSelectedDate1(date);\r\n    };\r\n    \r\n    const handleDateChange2 = (date) => {\r\n        setSelectedDate2(date);\r\n    };\r\n\r\n    const handleDateChange3 = (date) => {\r\n        setSelectedDate3(date);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setObra({\r\n          ...obra,\r\n          day_init: selectedDate,\r\n          day_final: selectedDate1,\r\n          hour_init: selectedDate2,\r\n          hour_final: selectedDate3,\r\n        });\r\n      }, [selectedDate,selectedDate1,selectedDate2,selectedDate3]);\r\n\r\n\r\n    function getDateFormat(date) {\r\n        const newDate = new Date(date);\r\n        let year = newDate.getFullYear().toString();\r\n        let month = (newDate.getMonth() + 1).toString();\r\n        let day = newDate.getDate().toString();\r\n      \r\n        day.length == 1 && (day = '0' + day);\r\n        month.length == 1 && (month = '0' + month);\r\n        let yyyymmdd = day + '/' + month + '/' + year;\r\n    \r\n        return yyyymmdd;  \r\n      }\r\n      \r\n\r\n      function getDatetimeFormat(date) {\r\n        // let yyyymmdd = getDateFormat(date);\r\n        \r\n        const newDate = new Date(date)\r\n        let hour = '' + newDate.getHours();\r\n        if (hour.length == 1) {\r\n          hour = '0' + hour;\r\n        }\r\n      \r\n        let minute = '' + newDate.getMinutes();\r\n        if (minute.length == 1) {\r\n          minute = '0' + minute;\r\n        }\r\n      \r\n        let second = '' + newDate.getSeconds();\r\n        if (second.length == 1) {\r\n          second = '0' + second;\r\n        }\r\n      \r\n        // return yyyymmdd + ' ' + hour + ':' + minute + ':' + second;\r\n        return  hour + ':' + minute + ':' + second;\r\n    \r\n      }\r\n\r\n\r\n    const {dispatchwork} = useContext(workContext)\r\n\r\n\r\n    const handleEnvio = async () =>{\r\n\r\n        await dispatchwork({\r\n            type: STEPONE_WORK,\r\n            payload:{\r\n                namework: obra.name,\r\n                day_init: getDateFormat(obra.day_init),\r\n                day_final: getDateFormat(obra.day_final),\r\n                time_init: getDatetimeFormat(obra.hour_init),\r\n                time_final: getDatetimeFormat(obra.hour_final), \r\n            }\r\n        })\r\n\r\n        handleNext()\r\n\r\n        // const dateTime = Date.now();\r\n        // const timestamp = Math.floor(dateTime / 1000);\r\n\r\n        // firebase.database().ref('/obras/' + timestamp).set({\r\n        //     datefinished: getDateFormat(obra.day_final),\r\n        //     datestart: getDateFormat(obra.day_init),\r\n        //     id: timestamp,\r\n        //     name : obra.name,\r\n        //     timefinish: getDatetimeFormat(obra.hour_final),\r\n        //     timestart: getDatetimeFormat(obra.hour_init),\r\n        //   });\r\n    }\r\n    \r\n\r\n    // const [data,setData] = useState({\r\n    //     datos:[]\r\n    // })\r\n\r\n\r\n    // const array = []\r\n\r\n    // const algo = (array) =>{\r\n    //     setData({\r\n    //         datos:array\r\n    //     })\r\n    // }\r\n\r\n    // const intento = () =>{\r\n    //     firebase.database().ref('/obras').once('value',function(snapshot){\r\n    //         snapshot.forEach(\r\n    //             function(ChildSnapshot){\r\n    //                 let datefinished = ChildSnapshot.val().datefinished\r\n    //                 let name = ChildSnapshot.val().name\r\n    //                 let objeto ={\r\n    //                     datefinished,\r\n    //                     name\r\n    //                 }\r\n    //                 array.push(objeto)\r\n    //                 console.log(array)\r\n    //                 algo(array)\r\n    //             }\r\n    //         )\r\n    //     })\r\n    // }\r\n         \r\n    \r\n\r\n    return ( \r\n        <div style={{margin:'20px'}}>\r\n            <Grid container className={classes.containerfield}>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                    fullWidth={true}\r\n                    type=\"email\"\r\n                    label=\"Nombre de la obra \"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese nombre de la obra\"\r\n                    onChange={handleChange}\r\n                    name=\"name\"\r\n                    value={obra.name}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.containerfield} >\r\n                <Grid item xs={12} sm={6} md={6} >\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardDatePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            minDate={new Date()}\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            label=\"Fecha de inicio\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                            // name=\"day_init\"\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6} style={{display:'flex',justifyContent:'flex-end'}}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardDatePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            minDate={new Date()}\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            label=\"Fecha de fin\"\r\n                            value={selectedDate1}\r\n                            onChange={handleDateChange1}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                            name=\"day_final\"\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.containerfield} >\r\n                <Grid item xs={12} sm={6} md={6} >\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardTimePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            label=\"Hora de ingreso\"\r\n                            value={selectedDate2}\r\n                            onChange={handleDateChange2}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6} style={{display:'flex',justifyContent:'flex-end'}}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardTimePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            label=\"Hora de salida\"\r\n                            value={selectedDate3}\r\n                            onChange={handleDateChange3}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n            </Grid>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEnvio} className={classes.btncontinuar}>Continuar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepOne\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\firebase\\firebase.config.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\empresasReducer.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\empresasContext.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\ObraMensual.jsx",["327","328"],"import React from \"react\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  fechaDehoy,\r\n  fechaTimeStamp,\r\n  mesTimeStamp,\r\n  mesNombre,\r\n} from \"../helpers/Fechas\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst ObraMensual = () => {\r\n  let { id } = useParams();\r\n  const obra = id.split(\"-\");\r\n\r\n  const mes = mesNombre(obra[1]);\r\n\r\n  const [fechas, setFechas] = React.useState([]);\r\n  const [cantidad, setCantidad] = React.useState([]);\r\n\r\n  const [excel, setExcel] = React.useState([]);\r\n\r\n  const [nombre, setNombre] = React.useState(\"\");\r\n\r\n  const obtenerDatosGeneral = async () => {\r\n    await firebase\r\n      .database()\r\n      .ref(\"/obras/\" + obra[0])\r\n      .once(\"value\", function (snapshot) {\r\n        if (snapshot.exists()) {\r\n          const data = snapshot.val();\r\n          setNombre(data.name);\r\n        } else {\r\n          console.log(\"error\");\r\n          return null;\r\n        }\r\n      });\r\n  };\r\n\r\n  const obtenerFechasyCantidad = async () => {\r\n    let totalAsistence = 0;\r\n\r\n    await firebase\r\n      .database()\r\n      .ref(\"/obras/\" + obra[0])\r\n      .once(\"value\", function (snapshot) {\r\n        if (snapshot.exists()) {\r\n          totalAsistence = snapshot.val().buildersnum;\r\n        } else {\r\n          console.log(\"error\");\r\n          return null;\r\n        }\r\n      });\r\n\r\n    await firebase\r\n      .database()\r\n      .ref(\"/obras/\" + obra[0])\r\n      .child(\"asistencia\")\r\n      .once(\"value\", function (snapshot) {\r\n        if (snapshot.exists()) {\r\n          let array = [];\r\n          snapshot.forEach(function (ChildSnapshot) {\r\n            let objeto = {};\r\n            const monthCurrency = parseInt(obra[1]);\r\n            const timestamp = new Date(ChildSnapshot.key * 1000);\r\n            const monthTimestamp = mesTimeStamp(timestamp);\r\n            if (monthCurrency === monthTimestamp) {\r\n              const datafor = Object.values(ChildSnapshot.val());\r\n              objeto.count = datafor.length;\r\n              objeto.total = totalAsistence;\r\n              objeto.day = fechaTimeStamp(new Date(ChildSnapshot.key * 1000));\r\n              array.push(objeto);\r\n            }\r\n          });\r\n          recibirArray(array, totalAsistence);\r\n        } else {\r\n          console.log(\"error NO TIENE ASISTENCIA\");\r\n          return null;\r\n        }\r\n      });\r\n  };\r\n  const recibirArray = (array, totalAsistence) => {\r\n    if (array.length > 0) {\r\n      const ArrayDay = array.map((item) => item.day);\r\n      ArrayDay.unshift(\"Se esperaba\");\r\n      setFechas(ArrayDay);\r\n      const ArrayCount = array.map((item) => item.count);\r\n      ArrayCount.unshift(parseInt(totalAsistence));\r\n      setCantidad(ArrayCount);\r\n      setExcel(array);\r\n    }\r\n  };\r\n\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const getDatosLista = (data) => {\r\n    let exportData = [];\r\n    data.forEach((l) => {\r\n      let object = {\r\n        DIA: l.day,\r\n        ASISTIERON: l.count,\r\n        TOTAL: l.total,\r\n      };\r\n      exportData.push(object);\r\n    });\r\n    return exportData;\r\n  };\r\n\r\n  //convertir a excel y descargar\r\n  const exportToCSV = () => {\r\n    const ws = XLSX.utils.json_to_sheet(getDatosLista(excel));\r\n    const wb = {\r\n      Sheets: { Listado_Mensual: ws },\r\n      SheetNames: [\"Listado_Mensual\"],\r\n    };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    const fileName = `${nombre}-${mes}`;\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  //imprimir PDF obra en general\r\n  const printDocument = () => {\r\n    const input = document.getElementById(\"graphdiv\");\r\n    html2canvas(input).then((canvas) => {\r\n      var imgWidth = 200;\r\n      //   var pageHeight = 290;\r\n      var imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      //   var heightLeft = imgHeight;\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"l\", \"mm\", \"a4\");\r\n      //   let y = 500;\r\n      var position = 0;\r\n      //   var heightLeft = imgHeight;\r\n      pdf.addImage(imgData, \"JPEG\", 0, position, imgWidth, imgHeight);\r\n      pdf.save(`${nombre}-${mes}`);\r\n    });\r\n  };\r\n\r\n  // console.log(cantidad);\r\n  console.log(fechas);\r\n\r\n  React.useEffect(() => {\r\n    obtenerDatosGeneral();\r\n    obtenerFechasyCantidad();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {excel && excel.length > 0 && (\r\n        <div\r\n          style={{\r\n            maxWidth: \"1400px\",\r\n            margin: \"auto\",\r\n            padding: \"20px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button onClick={exportToCSV} color=\"primary\" variant=\"outlined\">\r\n            DESCARGAR EXCEL\r\n          </Button>\r\n          <Button onClick={printDocument} color=\"primary\" variant=\"outlined\">\r\n            DESCARGAR PDF\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        id=\"graphdiv\"\r\n        style={{ maxWidth: \"1400px\", margin: \"auto\", padding: \"20px\" }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\" }}>Obra: {nombre}</h1>\r\n        <h2 style={{ textAlign: \"center\" }}>Mes: {mes}</h2>\r\n        <br></br>\r\n        <Bar\r\n          height={400}\r\n          width={900}\r\n          data={{\r\n            labels: fechas,\r\n            datasets: [\r\n              {\r\n                data: cantidad,\r\n                backgroundColor: [\r\n                  \"rgba(255, 99, 132, 0.2)\",\r\n                  \"rgba(200, 162, 235, 0.2)\",\r\n                  \"rgba(54, 162, 235, 0.2)\",\r\n                  \"rgba(223, 53, 215, 0.2)\",\r\n                  \"rgba(240, 173, 235, 0.2)\",\r\n                  \"rgba(240,248,255, 0.2)\",\r\n                  \"rgba(127,255,212, 0.2)\",\r\n                  \"rgba(0,0,0, 0.2)\",\r\n                  \"rgba(138,43,226, 0.2)\",\r\n                  \"rgba(127,255,0, 0.2)\",\r\n                  \"rgba(54, 162, 235, 0.2)\",\r\n                  \"rgba(255,248,220, 0.2)\",\r\n                  \"rgba(0,255,255, 0.2)\",\r\n                  \"rgba(0,139,139, 0.2)\",\r\n                  \"rgba(0,100,0, 0.2)\",\r\n                  \"rgba(169,169,169, 0.2)\",\r\n                  \"rgba(85,107,47, 0.2)\",\r\n                  \"rgba(148,0,211, 0.2)\",\r\n                  \"rgba(220,220,220, 0.2)\",\r\n                  \"rgba(128,128,128, 0.2)\",\r\n                  \"rgba(25,25,112, 0.2)\",\r\n                  \"rgba(255,228,225, 0.2)\",\r\n                  \"rgba(128,128,0, 0.2)\",\r\n                  \"rgba(188,143,143, 0.2)\",\r\n                  \"rgba(0,128,128, 0.2)\",\r\n                  \"rgba(255,255,255, 0.2)\",\r\n                  \"rgba(245,245,245, 0.2)\",\r\n                  \"rgba(255,255,0, 0.2)\",\r\n                  \"rgba(154,205,50, 0.2)\",\r\n                  \"rgba(135,206,235, 0.2)\",\r\n                  \"rgba(244,164,96, 0.2)\",\r\n                ],\r\n                borderColor: [\r\n                  \"rgba(255, 99, 132,1)\",\r\n                  \"rgba(200, 162, 235,1)\",\r\n                  \"rgba(54, 162, 235,1)\",\r\n                  \"rgba(223, 53, 215,1)\",\r\n                  \"rgba(240, 173, 235,1)\",\r\n                  \"rgba(240,248,255,1)\",\r\n                  \"rgba(127,255,212,1)\",\r\n                  \"rgba(0,0,0,1)\",\r\n                  \"rgba(138,43,226,1)\",\r\n                  \"rgba(127,255,0,1)\",\r\n                  \"rgba(54, 162, 235,1)\",\r\n                  \"rgba(255,248,220,1)\",\r\n                  \"rgba(0,255,255,1)\",\r\n                  \"rgba(0,139,139, 0.2)\",\r\n                  \"rgba(0,100,0,1)\",\r\n                  \"rgba(169,169,169,1)\",\r\n                  \"rgba(85,107,47,1)\",\r\n                  \"rgba(148,0,211,1)\",\r\n                  \"rgba(220,220,220,1)\",\r\n                  \"rgba(128,128,128,1)\",\r\n                  \"rgba(25,25,112,1)\",\r\n                  \"rgba(255,228,225,1)\",\r\n                  \"rgba(128,128,0,1)\",\r\n                  \"rgba(188,143,143,1)\",\r\n                  \"rgba(0,128,128,1)\",\r\n                  \"rgba(255,255,255,1)\",\r\n                  \"rgba(245,245,245,1)\",\r\n                  \"rgba(255,255,0,1)\",\r\n                  \"rgba(154,205,50,1)\",\r\n                  \"rgba(135,206,235,1)\",\r\n                  \"rgba(244,164,96,1)\",\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            legend: {\r\n              display: false,\r\n            },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ObraMensual;\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\BannerHome\\BannerHome.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\BannerHome\\BannerHome.css.jsx",["329"],"import { colors } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport banner from \"../../assets/img/fondoInicio.svg\";\r\n\r\nexport const useStylesBannerHome = makeStyles((theme) => ({\r\n  banner: {\r\n    backgroundImage: `url(${banner})`,\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    width: \"100%\",\r\n    height: \"350px\",\r\n    marginTop: \"-40px\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    padding: 50,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  title: {\r\n    fontSize: 35,\r\n    fontWeight: 400,\r\n  },\r\n  subtitle: {\r\n    fontSize: 20,\r\n    fontWeight: 400,\r\n  },\r\n}));\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\GridOptions\\GridOption.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\GridOptions\\GridOption.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Footer\\Footer.css.jsx",["330"],"import { makeStyles } from \"@material-ui/core\";\r\nimport foto from \"../../assets/img/fondoLogin.svg\";\r\n\r\nexport const useStylesFooter = makeStyles((theme) => ({\r\n    footer:{\r\n        background:theme.palette.primary.main,\r\n        position:'static',\r\n        width:'100%',\r\n        bottom:'0px',\r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n        height:'60px',\r\n        alignItems:'center',\r\n        color:'white',\r\n        padding:'10px 30px',\r\n        borderRadius:'30px 30px 0px 0px',\r\n        margin:'60px 0px 0px 0px',\r\n        [theme.breakpoints.up(1000)]: {\r\n            margin:'113px 0px 0px 0px',\r\n        },\r\n    }\r\n}));\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Profile.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\BannerProfile\\BannerProfile.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\BannerProfile\\BannerProfile.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\PictureProfile\\PictureProfile.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\PictureProfile\\PictureProfile.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\DataProfile\\DataProfile.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\DataProfile\\DataProfile.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Codes.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\CodeActivation\\CodeActivation.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\CodeExtention\\CodeExtension.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\CodeActivation\\CodeActivation.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormCode\\FormCode.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\CodeExtention\\CodeExtension.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Employees.jsx",["331","332","333"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\DetailWork\\DetailWork.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableEmployees\\TableEmployees.jsx",["334","335","336"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableEmployees\\TableEmployess.css.jsx",[],{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","replacedBy":"340"},{"ruleId":"341","severity":1,"message":"342","line":10,"column":23,"nodeType":"343","messageId":"344","endLine":10,"endColumn":29},{"ruleId":"341","severity":1,"message":"345","line":17,"column":8,"nodeType":"343","messageId":"344","endLine":17,"endColumn":16},{"ruleId":"346","severity":1,"message":"347","line":82,"column":6,"nodeType":"348","endLine":82,"endColumn":16,"suggestions":"349"},{"ruleId":"341","severity":1,"message":"350","line":6,"column":10,"nodeType":"343","messageId":"344","endLine":6,"endColumn":20},{"ruleId":"341","severity":1,"message":"351","line":24,"column":17,"nodeType":"343","messageId":"344","endLine":24,"endColumn":25},{"ruleId":"346","severity":1,"message":"352","line":247,"column":6,"nodeType":"348","endLine":247,"endColumn":8,"suggestions":"353"},{"ruleId":"346","severity":1,"message":"354","line":253,"column":6,"nodeType":"348","endLine":253,"endColumn":21,"suggestions":"355"},{"ruleId":"341","severity":1,"message":"356","line":13,"column":17,"nodeType":"343","messageId":"344","endLine":13,"endColumn":24},{"ruleId":"341","severity":1,"message":"357","line":36,"column":25,"nodeType":"343","messageId":"344","endLine":36,"endColumn":31},{"ruleId":"346","severity":1,"message":"358","line":69,"column":8,"nodeType":"348","endLine":69,"endColumn":10,"suggestions":"359"},{"ruleId":"341","severity":1,"message":"360","line":4,"column":3,"nodeType":"343","messageId":"344","endLine":4,"endColumn":9},{"ruleId":"341","severity":1,"message":"361","line":14,"column":8,"nodeType":"343","messageId":"344","endLine":14,"endColumn":28},{"ruleId":"337","replacedBy":"362"},{"ruleId":"339","replacedBy":"363"},{"ruleId":"341","severity":1,"message":"364","line":10,"column":10,"nodeType":"343","messageId":"344","endLine":10,"endColumn":27},{"ruleId":"341","severity":1,"message":"365","line":10,"column":29,"nodeType":"343","messageId":"344","endLine":10,"endColumn":37},{"ruleId":"341","severity":1,"message":"366","line":16,"column":8,"nodeType":"343","messageId":"344","endLine":16,"endColumn":18},{"ruleId":"341","severity":1,"message":"367","line":12,"column":8,"nodeType":"343","messageId":"344","endLine":12,"endColumn":16},{"ruleId":"346","severity":1,"message":"368","line":42,"column":8,"nodeType":"348","endLine":42,"endColumn":22,"suggestions":"369"},{"ruleId":"341","severity":1,"message":"370","line":56,"column":14,"nodeType":"343","messageId":"344","endLine":56,"endColumn":27},{"ruleId":"371","severity":1,"message":"372","line":62,"column":18,"nodeType":"373","messageId":"374","endLine":62,"endColumn":20},{"ruleId":"371","severity":1,"message":"372","line":63,"column":20,"nodeType":"373","messageId":"374","endLine":63,"endColumn":22},{"ruleId":"337","replacedBy":"375"},{"ruleId":"339","replacedBy":"376"},{"ruleId":"341","severity":1,"message":"360","line":1,"column":10,"nodeType":"343","messageId":"344","endLine":1,"endColumn":16},{"ruleId":"341","severity":1,"message":"360","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":16},{"ruleId":"346","severity":1,"message":"377","line":62,"column":8,"nodeType":"348","endLine":62,"endColumn":10,"suggestions":"378"},{"ruleId":"346","severity":1,"message":"377","line":97,"column":8,"nodeType":"348","endLine":97,"endColumn":10,"suggestions":"379"},{"ruleId":"346","severity":1,"message":"380","line":81,"column":10,"nodeType":"348","endLine":81,"endColumn":66,"suggestions":"381"},{"ruleId":"341","severity":1,"message":"350","line":8,"column":3,"nodeType":"343","messageId":"344","endLine":8,"endColumn":13},{"ruleId":"346","severity":1,"message":"382","line":155,"column":6,"nodeType":"348","endLine":155,"endColumn":8,"suggestions":"383"},{"ruleId":"341","severity":1,"message":"384","line":1,"column":10,"nodeType":"343","messageId":"344","endLine":1,"endColumn":16},{"ruleId":"341","severity":1,"message":"385","line":2,"column":8,"nodeType":"343","messageId":"344","endLine":2,"endColumn":12},{"ruleId":"341","severity":1,"message":"386","line":109,"column":9,"nodeType":"343","messageId":"344","endLine":109,"endColumn":18},{"ruleId":"346","severity":1,"message":"387","line":152,"column":6,"nodeType":"348","endLine":152,"endColumn":8,"suggestions":"388"},{"ruleId":"346","severity":1,"message":"389","line":156,"column":6,"nodeType":"348","endLine":156,"endColumn":19,"suggestions":"390"},{"ruleId":"341","severity":1,"message":"360","line":3,"column":3,"nodeType":"343","messageId":"344","endLine":3,"endColumn":9},{"ruleId":"341","severity":1,"message":"391","line":180,"column":9,"nodeType":"343","messageId":"344","endLine":180,"endColumn":19},{"ruleId":"341","severity":1,"message":"392","line":194,"column":9,"nodeType":"343","messageId":"344","endLine":194,"endColumn":15},"no-native-reassign",["393"],"no-negated-in-lhs",["394"],"no-unused-vars","'Dialog' is defined but never used.","Identifier","unusedVar","'Reportes' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'obtenerData'. Either include it or remove the dependency array.","ArrayExpression",["395"],"'fechaDehoy' is defined but never used.","'setFecha' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'obtenerDataPorEmpresas' and 'obtenerDatosGeneral'. Either include them or remove the dependency array.",["396"],"React Hook React.useEffect has a missing dependency: 'obtenerDataAsistenciaGeneral'. Either include it or remove the dependency array.",["397"],"'setInfo' is assigned a value but never used.","'objeto' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'array'. Either include it or remove the dependency array.",["398"],"'Button' is defined but never used.","'PowerSettingsNewIcon' is defined but never used.",["393"],["394"],"'LoginwithFirebase' is defined but never used.","'UserType' is defined but never used.","'background' is defined but never used.","'firebase' is defined but never used.","React Hook useEffect has a missing dependency: 'worker'. Either include it or remove the dependency array. You can also do a functional update 'setWorker(w => ...)' if you only need 'worker' in the 'setWorker' call.",["399"],"'getDateFormat' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["393"],["394"],"React Hook useEffect has a missing dependency: 'array'. Either include it or remove the dependency array.",["400"],["401"],"React Hook useEffect has a missing dependency: 'obra'. Either include it or remove the dependency array. You can also do a functional update 'setObra(o => ...)' if you only need 'obra' in the 'setObra' call.",["402"],"React Hook React.useEffect has missing dependencies: 'obtenerDatosGeneral' and 'obtenerFechasyCantidad'. Either include them or remove the dependency array.",["403"],"'colors' is defined but never used.","'foto' is defined but never used.","'datosUser' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'obtemerDatosObra', 'obtenerRisObra', and 'obtenerWorkerObra'. Either include them or remove the dependency array.",["404"],"React Hook React.useEffect has a missing dependency: 'obtenerDataTable'. Either include it or remove the dependency array.",["405"],"'stateStyle' is assigned a value but never used.","'router' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"412","fix":"416"},{"desc":"412","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},"Update the dependencies array to be: [obtenerData, typeData]",{"range":"426","text":"427"},"Update the dependencies array to be: [obtenerDataPorEmpresas, obtenerDatosGeneral]",{"range":"428","text":"429"},"Update the dependencies array to be: [nombre, obtenerDataAsistenciaGeneral, total]",{"range":"430","text":"431"},"Update the dependencies array to be: [array]",{"range":"432","text":"433"},"Update the dependencies array to be: [selectedDate, worker]",{"range":"434","text":"435"},{"range":"436","text":"433"},{"range":"437","text":"433"},"Update the dependencies array to be: [obra, selectedDate, selectedDate1, selectedDate2, selectedDate3]",{"range":"438","text":"439"},"Update the dependencies array to be: [obtenerDatosGeneral, obtenerFechasyCantidad]",{"range":"440","text":"441"},"Update the dependencies array to be: [obtemerDatosObra, obtenerRisObra, obtenerWorkerObra]",{"range":"442","text":"443"},"Update the dependencies array to be: [obtenerDataTable, ris, worker]",{"range":"444","text":"445"},[2279,2289],"[obtenerData, typeData]",[8819,8821],"[obtenerDataPorEmpresas, obtenerDatosGeneral]",[8949,8964],"[nombre, obtenerDataAsistenciaGeneral, total]",[1977,1979],"[array]",[966,980],"[selectedDate, worker]",[1572,1574],[2796,2798],[2030,2086],"[obra, selectedDate, selectedDate1, selectedDate2, selectedDate3]",[4677,4679],"[obtenerDatosGeneral, obtenerFechasyCantidad]",[3806,3808],"[obtemerDatosObra, obtenerRisObra, obtenerWorkerObra]",[3871,3884],"[obtenerDataTable, ris, worker]"]