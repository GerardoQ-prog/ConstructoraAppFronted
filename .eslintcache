[{"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\App.js":"3","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\themeGlobal.jsx":"4","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\userContext.jsx":"5","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\state\\workState.jsx":"6","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\state\\userState.jsx":"7","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Home.jsx":"8","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\workContext.jsx":"9","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\userReducer.jsx":"10","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Login.jsx":"11","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\RIS.jsx":"12","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Work.jsx":"13","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\ObraExcel.jsx":"14","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Worker.jsx":"15","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\CodeActivation.jsx":"16","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\workReducer.jsx":"17","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Reportes.jsx":"18","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\CodeExtension.jsx":"19","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.jsx":"20","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.jsx":"21","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\helpers\\Fechas.js":"22","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\helpers\\textDate.js":"23","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.jsx":"24","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\types\\workTypes.jsx":"25","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\types\\userTypes.jsx":"26","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.jsx":"27","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormWorker\\FormWorker.jsx":"28","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableWork\\TableWork.jsx":"29","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormCode\\FormCode.jsx":"30","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableCode\\TableCode.jsx":"31","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.css.jsx":"32","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.css.jsx":"33","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Menu\\Menu.jsx":"34","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableCode\\TableCode.css.jsx":"35","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableWork\\TableWork.css.jsx":"36","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Menu\\Menu.css.jsx":"37","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.css.jsx":"38","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.css.jsx":"39","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.jsx":"40","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.jsx":"41","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepThree\\SteepThree.jsx":"42","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.jsx":"43","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.jsx":"44","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\firebase\\firebase.config.jsx":"45","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.css.jsx":"46","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.css.jsx":"47","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.css.jsx":"48","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.css.jsx":"49","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\actions\\empresasAction.jsx":"50","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\empresasReducer.jsx":"51","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\empresasContext.jsx":"52","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\ObraMensual.jsx":"53"},{"size":500,"mtime":1606529618840,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":1606529618840,"results":"56","hashOfConfig":"55"},{"size":5734,"mtime":1613833763724,"results":"57","hashOfConfig":"55"},{"size":956,"mtime":1613323994243,"results":"58","hashOfConfig":"55"},{"size":90,"mtime":1607622103600,"results":"59","hashOfConfig":"55"},{"size":230,"mtime":1609092955678,"results":"60","hashOfConfig":"55"},{"size":135,"mtime":1607882331657,"results":"61","hashOfConfig":"55"},{"size":4017,"mtime":1613611372701,"results":"62","hashOfConfig":"55"},{"size":88,"mtime":1608088590568,"results":"63","hashOfConfig":"55"},{"size":1078,"mtime":1607882334256,"results":"64","hashOfConfig":"55"},{"size":200,"mtime":1607786809875,"results":"65","hashOfConfig":"55"},{"size":149,"mtime":1607805819377,"results":"66","hashOfConfig":"55"},{"size":5967,"mtime":1613340448038,"results":"67","hashOfConfig":"55"},{"size":15442,"mtime":1613833911041,"results":"68","hashOfConfig":"55"},{"size":407,"mtime":1607903480684,"results":"69","hashOfConfig":"55"},{"size":1555,"mtime":1612107188596,"results":"70","hashOfConfig":"55"},{"size":1123,"mtime":1609088367819,"results":"71","hashOfConfig":"55"},{"size":3167,"mtime":1611718013592,"results":"72","hashOfConfig":"55"},{"size":1552,"mtime":1612108010276,"results":"73","hashOfConfig":"55"},{"size":1865,"mtime":1613323117317,"results":"74","hashOfConfig":"55"},{"size":612,"mtime":1607901179713,"results":"75","hashOfConfig":"55"},{"size":1481,"mtime":1613839688028,"results":"76","hashOfConfig":"55"},{"size":287,"mtime":1611380675422,"results":"77","hashOfConfig":"55"},{"size":2112,"mtime":1609094554210,"results":"78","hashOfConfig":"55"},{"size":201,"mtime":1608089106127,"results":"79","hashOfConfig":"55"},{"size":188,"mtime":1607798748734,"results":"80","hashOfConfig":"55"},{"size":4848,"mtime":1611378149606,"results":"81","hashOfConfig":"55"},{"size":7674,"mtime":1612481435155,"results":"82","hashOfConfig":"55"},{"size":9821,"mtime":1613337228715,"results":"83","hashOfConfig":"55"},{"size":5574,"mtime":1612483846109,"results":"84","hashOfConfig":"55"},{"size":8282,"mtime":1612135699204,"results":"85","hashOfConfig":"55"},{"size":330,"mtime":1607879809322,"results":"86","hashOfConfig":"55"},{"size":1062,"mtime":1613324191592,"results":"87","hashOfConfig":"55"},{"size":5819,"mtime":1612075676732,"results":"88","hashOfConfig":"55"},{"size":1835,"mtime":1612107730137,"results":"89","hashOfConfig":"55"},{"size":1930,"mtime":1613323193562,"results":"90","hashOfConfig":"55"},{"size":847,"mtime":1607880496525,"results":"91","hashOfConfig":"55"},{"size":1505,"mtime":1607706226166,"results":"92","hashOfConfig":"55"},{"size":873,"mtime":1607885746514,"results":"93","hashOfConfig":"55"},{"size":4084,"mtime":1609094469885,"results":"94","hashOfConfig":"55"},{"size":466,"mtime":1607716101709,"results":"95","hashOfConfig":"55"},{"size":4146,"mtime":1609089537652,"results":"96","hashOfConfig":"55"},{"size":3843,"mtime":1609088337084,"results":"97","hashOfConfig":"55"},{"size":9902,"mtime":1608090551038,"results":"98","hashOfConfig":"55"},{"size":617,"mtime":1607901576064,"results":"99","hashOfConfig":"55"},{"size":755,"mtime":1609092884996,"results":"100","hashOfConfig":"55"},{"size":664,"mtime":1607706403318,"results":"101","hashOfConfig":"55"},{"size":289,"mtime":1608090527791,"results":"102","hashOfConfig":"55"},{"size":346,"mtime":1608088303734,"results":"103","hashOfConfig":"55"},{"size":2,"mtime":1613622623214,"results":"104","hashOfConfig":"55"},{"size":1525,"mtime":1613622462783,"results":"105","hashOfConfig":"55"},{"size":91,"mtime":1613621296157,"results":"106","hashOfConfig":"55"},{"size":8764,"mtime":1613840405710,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"7fe30v",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\index.js",[],["226","227"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\App.js",["228"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\themeGlobal.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\userContext.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\state\\workState.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\state\\userState.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Home.jsx",["229","230"],"import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Steppers from \"../components/Steppers/Steppers\";\r\nimport XLSX from \"xlsx\";\r\nimport { toStringDate } from \"../helpers/textDate\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst Home = () => {\r\n  const [file, setFile] = React.useState(null);\r\n\r\n  const onChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const [json, setJSON] = React.useState({});\r\n\r\n  const JSON = () => {\r\n    // XLSX.utils.json_to_sheet(data, 'out.xlsx');\r\n    if (file) {\r\n      let fileReader = new FileReader();\r\n      fileReader.readAsBinaryString(file);\r\n      fileReader.onload = (event) => {\r\n        let data = event.target.result;\r\n        let workbook = XLSX.read(data, { type: \"binary\" });\r\n        console.log(workbook);\r\n        workbook.SheetNames.forEach((sheet) => {\r\n          let rowObject = XLSX.utils.sheet_to_row_object_array(\r\n            workbook.Sheets[sheet]\r\n          );\r\n          console.log(rowObject);\r\n          setJSON(rowObject);\r\n          //   document.getElementById(\"jsondata\").innerHTML = JSON.stringify(rowObject,undefined,4)\r\n        });\r\n      };\r\n    }\r\n  };\r\n\r\n  console.log(file);\r\n\r\n  const cambiarname = () => {\r\n    console.log(\"sadsad\", json);\r\n    let newjson;\r\n    for (const item of json) {\r\n      const fecha = item[\"FECHA DE NACIMIENTO\"]\r\n        ? toStringDate(\r\n            new Date((item[\"FECHA DE NACIMIENTO\"] - (25567 + 1)) * 86400 * 1000)\r\n          )\r\n        : \"\";\r\n      const fechapuesto = item[\"FECHA INICIO PUESTO\"]\r\n        ? toStringDate(\r\n            new Date((item[\"FECHA INICIO PUESTO\"] - (25567 + 1)) * 86400 * 1000)\r\n          )\r\n        : \"\";\r\n      const fechacese = item[\"FECHA DE CESE EN OBRA\"]\r\n        ? toStringDate(\r\n            new Date(\r\n              (item[\"FECHA DE CESE EN OBRA\"] - (25567 + 1)) * 86400 * 1000\r\n            )\r\n          )\r\n        : \"\";\r\n      const dniexce = item[\"FECHA DE VENCIMIENTO DEL DNI\"]\r\n        ? toStringDate(\r\n            new Date(\r\n              (item[\"FECHA DE VENCIMIENTO DEL DNI\"] - (25567 + 1)) *\r\n                86400 *\r\n                1000\r\n            )\r\n          )\r\n        : \"\";\r\n      const nrodoc = item[\"DNI\"] ? item[\"DNI\"] : \"\";\r\n      const ruc = item[\"RUC\"] ? item[\"RUC\"] : \"\";\r\n      console.log(nrodoc);\r\n      newjson = {\r\n        charge: item[\"OCUPACION\"] ? item[\"OCUPACION\"] : \"\",\r\n        category: item[\"CATEGORIA\"] ? item[\"CATEGORIA\"] : \"\",\r\n        payroll: item[\"PLANILLA\"] ? item[\"PLANILLA\"] : \"\",\r\n        // datestart: fechapuesto,\r\n        dayborn: fecha,\r\n        names: item[\"NOMBRE 2\"]\r\n          ? `${item[\"NOMBRE 1\"]} ${item[\"NOMBRE 2\"]}`\r\n          : item[\"NOMBRE 1\"],\r\n        lastnamefirst: item[\"APELLIDO PATERNO\"] ? item[\"APELLIDO PATERNO\"] : \"\",\r\n        lastnamesecond: item[\"APELLIDO MATERNO\"]\r\n          ? item[\"APELLIDO MATERNO\"]\r\n          : \"\",\r\n        typedoc: \"DNI\",\r\n        enterprise: item[\"EMPRESA\"] ? item[\"EMPRESA\"] : \"\",\r\n        enterpriseruc: item[\"RUC\"] ? item[\"RUC\"].toString() : \"\",\r\n        nrodoc: nrodoc.toString(),\r\n        buildid: \"1613055395\",\r\n        datecessationwork: fechacese,\r\n        expirationdatedni: dniexce,\r\n      };\r\n      console.log(newjson);\r\n      firebase\r\n        .database()\r\n        .ref(\"/obreros/\" + nrodoc)\r\n        .set(newjson)\r\n        .then((res) => {\r\n          console.log(\"res\", res);\r\n        })\r\n        .catch((ex) => {\r\n          console.log(ex);\r\n        });\r\n    }\r\n  };\r\n\r\n  console.log(\"json\", json);\r\n\r\n  return (\r\n    <div style={{ maxWidth: 900, margin: \"auto\" }}>\r\n      <Typography variant=\"h3\" style={{ margin: \"20px\" }}>\r\n        Nueva Obra\r\n      </Typography>\r\n      <Steppers></Steppers>\r\n      <input\r\n        type=\"file\"\r\n        id=\"input\"\r\n        accept=\".xls,.xlsx\"\r\n        onChange={onChange}\r\n      ></input>\r\n      <button onClick={JSON}>JSON</button>\r\n      <button onClick={cambiarname}>ENVIAR</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\workContext.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\userReducer.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Login.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\RIS.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Work.jsx",["231","232","233","234","235","236","237","238"],"import { Button, FormControl, InputLabel, MenuItem, Select, Typography, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\nimport TableWork from '../components/TableWork/TableWork';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';  \r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n    button:{\r\n        textTransform:'initial',\r\n        background:'transparent',\r\n        color: theme.palette.secondary.main,\r\n        padding:'0px 10px'\r\n    },\r\n    buttonActive:{\r\n        textTransform:'initial',\r\n        background:'#FFFFFF',\r\n        color:'#979797',\r\n        borderRadius:30,\r\n        width:90,\r\n        \"&:hover\":{\r\n            background:'#FFFFFF',\r\n            color:'#979797',\r\n        }\r\n    }\r\n}))\r\n\r\nconst Work = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [typeData,setTypeData] = React.useState(\"todos\")\r\n\r\n    const [dataWork,setDataWork] = React.useState([])\r\n\r\n    const obtenerData = () => {\r\n        console.log('dataa')\r\n        if(typeData === 'activos'){\r\n            firebase.database().ref('/obras').once('value',function(snapshot){\r\n                const obras = Object.values(snapshot.val())\r\n                const newData = obras.filter(item => item.state === 'activado')\r\n                console.log(newData)\r\n                setDataWork(newData)\r\n            })\r\n        }else if(typeData === 'registrados'){\r\n            firebase.database().ref('/obras').once('value',function(snapshot){\r\n                const obras = Object.values(snapshot.val())\r\n                const newData = obras.filter(item => item.state === 'registrado')\r\n                console.log(newData)\r\n                setDataWork(newData)\r\n            })\r\n        }else{\r\n            firebase.database().ref('/obras').once('value',function(snapshot){\r\n                const obras = Object.values(snapshot.val())\r\n                // const newData = obras.filter(item => item.state === 'registrado')\r\n                console.log(obras)\r\n                setDataWork(obras)\r\n            })\r\n        }\r\n        \r\n\r\n    }  \r\n\r\n    React.useEffect(()=>{\r\n        obtenerData() \r\n    },[typeData])\r\n\r\n    console.log(typeData)\r\n\r\n    const printDocument =() => {  \r\n        const input = document.getElementById('graphdiv');  \r\n        html2canvas(input)  \r\n          .then((canvas) => {  \r\n            var imgWidth = 200;  \r\n            var pageHeight = 290;  \r\n            var imgHeight = canvas.height * imgWidth / canvas.width;  \r\n            var heightLeft = imgHeight;  \r\n            const imgData = canvas.toDataURL('image/png');  \r\n            const pdf = new jsPDF('p', 'mm', 'a4',)  \r\n            var position = 0;  \r\n            var heightLeft = imgHeight;  \r\n            pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, imgHeight);  \r\n            pdf.save('intento');  \r\n          });  \r\n      }  \r\n\r\n    return (\r\n \r\n        <div style={{maxWidth:1240,margin:'auto',boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.24)',padding:'5px 20px'}}>\r\n            \r\n            <div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\r\n            <Typography variant=\"h3\">Listado de Obras : {dataWork.length}</Typography>\r\n            <div style={{background:'#FBE5C9',height:45,width:300,display:'flex',alignItems:'center',justifyContent:'center',borderRadius:30}}>\r\n                <Button \r\n                className={ typeData === \"todos\" ? classes.buttonActive : classes.button }\r\n                onClick={()=>setTypeData('todos')}\r\n                >Todos</Button>\r\n                <Button \r\n                className={ typeData === \"activos\" ? classes.buttonActive : classes.button }\r\n                onClick={()=>setTypeData('activos')}\r\n                >Activados</Button>\r\n                <Button \r\n                className={ typeData === \"registrados\" ? classes.buttonActive : classes.button }\r\n                onClick={()=>setTypeData('registrados')}\r\n                >Registrados</Button>\r\n\r\n            </div>\r\n            </div>\r\n          \r\n                asdsadsadsadsad\r\n            \r\n            <button onClick={printDocument}>onlick</button>\r\n            {/* <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Estado  de Obra\r\n              </InputLabel>\r\n              <Select\r\n                value={typeData}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"category\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger categoria</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"todos\">Todos</MenuItem>\r\n                <MenuItem value=\"activos\">Solo activos</MenuItem>\r\n                <MenuItem value=\"registrados\">Solo registrados</MenuItem>\r\n              </Select>\r\n            </FormControl> */}\r\n            <br></br>\r\n            {/* <br></br> */}\r\n            \r\n            <TableWork data={dataWork}></TableWork>\r\n            <div id=\"graphdiv\">\r\n            {/* <h1>adsadsad</h1> */}\r\n            <Bar\r\n            height={400}\r\n            width={600} \r\n            data={{\r\n                labels: ['10/02', '10/05','10/02', '10/05'],\r\n                datasets: [{\r\n                    label: 'Obreros',\r\n                    data: [12, 19, 3, 5, 2, 3],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n            }} >\r\n            </Bar>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Work\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\ObraExcel.jsx",["239","240","241","242"],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Worker.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\CodeActivation.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\workReducer.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\Reportes.jsx",["243","244","245"],"import React from 'react'\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\n\r\nconst Reportes = () => {\r\n\r\n    const [data, setdata] = React.useState({\r\n        datos :[]\r\n    })        \r\n    const [info,setInfo] = React.useState({\r\n        emailreport:'',\r\n        dniris:''\r\n    })\r\n\r\n    const array = []\r\n\r\n    const addArray = (array) =>{\r\n        setdata({\r\n            datos:array\r\n        })\r\n    }\r\n\r\n    \r\n    const handleChange = (e) =>{\r\n\r\n        console.log(e.target.value)\r\n        firebase.database().ref('/obras').child(e.target.value).once('value',function(snapshot){\r\n            console.log('entra')\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().asistencia\r\n                    let name = ChildSnapshot.val().name\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name\r\n                    }\r\n                    console.log(numberdoc)\r\n                   \r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        firebase.database().ref('/obras').once('value',function(snapshot){\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().id\r\n                    let name = ChildSnapshot.val().name\r\n                    let asistencia = ChildSnapshot.val().asistencia\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name,\r\n                        asistencia\r\n                    }\r\n                    console.log(numberdoc)\r\n                    console.log(asistencia)\r\n                    array.push(objeto)\r\n                    // console.log(array)\r\n                    addArray(array)\r\n                }\r\n            )\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{maxWidth:900,margin:'auto'}}>\r\n                <FormControl variant=\"outlined\" fullWidth={true}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Encargado de Asistencia\r\n                        </InputLabel>\r\n                        <Select\r\n                            value={info.dniris}\r\n                            onChange={handleChange}\r\n                            label=\"Encargado de Asistencia\"\r\n                            name=\"dniris\"\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                            <em>Escoger encargado</em>\r\n                            </MenuItem>\r\n                            {\r\n                               data.datos.map((item,index) => {\r\n                                return(\r\n                                    <MenuItem value={item.numberdoc} key={index} >{item.name}</MenuItem>\r\n                                )\r\n                               }) \r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reportes\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\CodeExtension.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\helpers\\Fechas.js",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\helpers\\textDate.js",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\types\\workTypes.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\types\\userTypes.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.jsx",["246","247","248"],"import { Grid, TextField, Typography } from '@material-ui/core'\r\nimport React , { useState, useContext } from 'react'\r\nimport { userContext } from '../../context/userContext'\r\nimport { LoginwithFirebase, UserType } from '../../firebase/firebase.config'\r\nimport ButtonPrimary from '../ButtonPrimary/ButtonPrimary'\r\nimport { useStylesFormLogin } from './FormLogin.css'\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nimport { ADD_OTHERDATOS_USER, ADD_UID_USER, LOGIN_USER,LOGOUT_USER } from '../../types/userTypes';\r\n\r\nconst FormLogin = () => {\r\n\r\n    const classes = useStylesFormLogin()\r\n\r\n    const [login, setLogin] = useState({\r\n        email:'',\r\n        password:''\r\n    }) \r\n    const { email , password } = login\r\n    \r\n    const handleChange = (e) => {\r\n        setLogin({\r\n            ...login,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const { dispatch } = useContext(userContext)\r\n\r\n    const LoginwithFirebase = (email,password) => {\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then((user) => {\r\n            const uid = user.user.uid\r\n            console.log('user',uid);\r\n            dispatch({\r\n                type:ADD_UID_USER,\r\n                payload: uid\r\n            })\r\n            UserType(uid)\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.log('error',error);\r\n           \r\n        });\r\n    \r\n        \r\n        }\r\n    \r\n        const UserType = (uid) => {\r\n    \r\n            // let data\r\n            // var starCountRef = firebase.database().ref('/users/' + uid);\r\n            // starCountRef.on('value', (snapshot) =>{\r\n            // data = snapshot.val();\r\n            //     console.log(data)\r\n            //     return data        \r\n            // });\r\n            firebase.database().ref('/users/'+ uid).once('value')\r\n            .then((snapshot) => {\r\n                const type = (snapshot.val() && snapshot.val().type) ;\r\n                const name = (snapshot.val() && snapshot.val().name) ;\r\n                const email = (snapshot.val() && snapshot.val().email) ;\r\n                console.log('tipo usser',type)\r\n                dispatch({\r\n                    type:ADD_OTHERDATOS_USER,\r\n                    payload:{\r\n                        type,\r\n                        name,\r\n                        email\r\n                    }\r\n                })\r\n                dispatch({\r\n                    type:LOGIN_USER,\r\n                    payload: true\r\n                })\r\n                \r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n                \r\n            })\r\n    \r\n    \r\n        }\r\n    \r\n\r\n    const handleLogin =  () => {\r\n        LoginwithFirebase( email , password) \r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div style={{margin:'30px'}}>\r\n        <Grid  container className={classes.container_login}>\r\n            <Grid item className={classes.banner_login} md={6} sm={6}>\r\n                <div className={classes.banner_title}>\r\n                    <Typography className={classes.logo_title}>Constructora</Typography>\r\n                    <Typography \r\n                    className={classes.logo_title}\r\n                    style={{textAlign:'end'}}>Futuro</Typography>\r\n                </div>\r\n            </Grid>\r\n            <Grid item md={6} sm={6} className={classes.form_login}>\r\n\r\n                    <div className={classes.form_title} >\r\n                        <Typography className={classes.form_text_title}>Bienvenido</Typography>\r\n                        <Typography style={{fontSize:'36px'}}>a tu </Typography>\r\n                        <Typography className={classes.form_text_title}>Administrador</Typography>\r\n\r\n                    </div>\r\n                    <br></br>\r\n                    <TextField\r\n                    type=\"email\"\r\n                    label=\"Correo Electrónico\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese correo electrónico\"\r\n                    onChange={handleChange}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    // autoComplete=\"off\"\r\n                    />\r\n                    <br></br>\r\n                    <TextField\r\n                    type=\"password\"\r\n                    label=\"Contraseña\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese contraseña\"\r\n                    onChange={handleChange}\r\n                    name=\"password\"\r\n                    value={password}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                    <br></br>\r\n                    <ButtonPrimary text=\"Ingresar\" onClick={handleLogin}/>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FormLogin\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormWorker\\FormWorker.jsx",["249","250","251","252","253"],"import { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'\r\nimport React , { useState, useEffect } from 'react'\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nconst FormWorker = () => {\r\n\r\n    const [worker, setWorker] = useState({\r\n      name:'',\r\n      lastname:'',\r\n      dayborn: new Date(),\r\n      typedoc:'',\r\n      numberdoc:'',\r\n      category:'',\r\n      status:''\r\n    })\r\n    \r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n      new Date()\r\n    );\r\n\r\n    const handleDateChange = (date) => {\r\n      setSelectedDate(date);\r\n    };\r\n\r\n    useEffect(() => {\r\n      setWorker({\r\n        ...worker,\r\n        dayborn: selectedDate,\r\n\r\n      });\r\n    }, [selectedDate]);\r\n\r\n\r\n    const handleChange = (e) =>{\r\n      setWorker({\r\n          ...worker,\r\n          [e.target.name]:e.target.value\r\n      })\r\n    }\r\n\r\n\r\n    console.log(worker)\r\n\r\n\r\n    function getDateFormat(date) {\r\n      const newDate = new Date(date);\r\n      let year = newDate.getFullYear().toString();\r\n      let month = (newDate.getMonth() + 1).toString();\r\n      let day = newDate.getDate().toString();\r\n    \r\n      day.length == 1 && (day = '0' + day);\r\n      month.length == 1 && (month = '0' + month);\r\n      let yyyymmdd = day + '/' + month + '/' + year;\r\n  \r\n      return yyyymmdd;  \r\n    }\r\n\r\n    const handleNewWorker = () => {\r\n\r\n      // firebase.database().ref('obreros').child(worker.numberdoc).on()\r\n\r\n      // firebase.database().ref('/obreros/' + worker.numberdoc).once('value')\r\n      // .then((snapshot)=>{\r\n      //   if(snapshot.exists){\r\n\r\n      //   }else{\r\n          \r\n      //   }\r\n      // })\r\n      \r\n      // firebase.database().ref('/obreros/' + worker.numberdoc).set({\r\n      //   typedoc: worker.typedoc,\r\n      //   dayborn: getDateFormat(worker.dayborn),\r\n      //   dni: worker.numberdoc,\r\n      //   name : worker.name,\r\n      //   lastname: worker.lastname,\r\n      //   obraid:'',\r\n      //   category:worker.category,\r\n      //   status:worker.status\r\n      // }).catch(error =>{\r\n      //   console.log(error)\r\n      // })\r\n      \r\n      \r\n      \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <div style={{margin:'20px'}}>\r\n        <Grid container spacing={2} style={{padding:'15px 0px'}}>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              fullWidth={true}\r\n              type=\"email\"\r\n              label=\"Nombres del obrero\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ingrese nombres del obrero\"\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              value={worker.name}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              fullWidth={true}\r\n              type=\"email\"\r\n              label=\"Apellidos del obrero\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ingrese apellidos del obrero\"\r\n              onChange={handleChange}\r\n              name=\"lastname\"\r\n              value={worker.lastname}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} >\r\n            <Grid item md={6} sm={6} xs={12}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardDatePicker\r\n                            style={{width:'100%'}}\r\n                            autoOk\r\n                            minDate={new Date()}\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            label=\"Fecha de nacimiento\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                        />\r\n              </MuiPickersUtilsProvider>  \r\n            </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} style={{padding:'15px 0px'}}>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Tipo de documento\r\n              </InputLabel>\r\n              <Select\r\n                value={worker.typedoc}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"typedoc\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger tipo de documento</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"DNI\">DNI</MenuItem>\r\n                <MenuItem value=\"Pasaporte\">Pasaporte</MenuItem>\r\n                <MenuItem value=\"Carnet de Extranjeria\">Carnet de Extranjeria</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              fullWidth={true}\r\n              type=\"email\"\r\n              label=\"Numero de documento\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ingrese numero de documento\"\r\n              onChange={handleChange}\r\n              name=\"numberdoc\"\r\n              value={worker.numberdoc}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} style={{padding:'15px 0px'}}>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Categoria\r\n              </InputLabel>\r\n              <Select\r\n                value={worker.category}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"category\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger categoria</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Albañil\">Albañil</MenuItem>\r\n                <MenuItem value=\"Carpintero\">Carpintero</MenuItem>\r\n                <MenuItem value=\"Electricista\">Electricista</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Estado\r\n              </InputLabel>\r\n              <Select\r\n                value={worker.status}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"status\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger estado</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Activo\">Activo</MenuItem>\r\n                <MenuItem value=\"De baja\">De baja</MenuItem>\r\n                <MenuItem value=\"Suspendido\">Suspendido</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{display:'flex',justifyContent:'center'}}>\r\n          <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          onClick={handleNewWorker}>Registrar Obrero</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default FormWorker\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableWork\\TableWork.jsx",["254"],"import { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, withStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useStylesTableWork } from './TableWork.css';\r\n\r\n//Estilos de la tabla del encabezado y contenido\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"white\",\r\n      minWidth: \"165px\",\r\n      \"&:hover\":{\r\n        color: \"white\",\r\n      }\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      fontFamily: \"'Open Sans', 'Helvetica', 'Arial', sans-serif\",\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  \r\n  //Creando data de la tabla\r\n  function createData(\r\n    id,\r\n    name,\r\n    state,\r\n    // stateampliation,\r\n    codeaccess,\r\n    // codeampliation,\r\n    // timestart,\r\n    // timefinish,\r\n    datestart,\r\n    datefinished,\r\n    // admin\r\n  ) {\r\n    return { id, name, state, \r\n      // stateampliation, \r\n      codeaccess, \r\n      // codeampliation, \r\n      // timestart,\r\n      // timefinish,\r\n      datestart,datefinished,\r\n      // admin \r\n    };\r\n  }\r\n  \r\n  //Ascendente y descendente de la tabla\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  function getComparator(order, orderBy) {\r\n    return order === \"desc\"\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  \r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  \r\n  //Encabezados de la tabla\r\n  const headCells = [\r\n    {id: \"id\",numeric: true,disablePadding: false,label: \"Id Obra\"},\r\n    {id: \"name\",numeric: true,disablePadding: false,label: \"Nombre\"},\r\n    { id: \"state\", numeric: false, disablePadding: false, label: \"Estado Activación\" },\r\n    // { id: \"stateampliation\", numeric: false, disablePadding: false, label: \"Estado Ampliación\" },\r\n    { id: \"codeaccess\", numeric: false, disablePadding: false, label: \"Codigo Activacón\" },\r\n    // { id: \"codeampliation\", numeric: false, disablePadding: false, label: \"Codigo Ampliación\" },\r\n    // { id: \"timestart\", numeric: false, disablePadding: false, label: \"Hora Entrada\" },\r\n    // { id: \"timefinish\", numeric: false, disablePadding: false, label: \"Hora Salida\" },\r\n    { id: \"datestart\", numeric: false, disablePadding: false, label: \"Fecha Inicio\" },\r\n    { id: \"datefinished\", numeric: false, disablePadding: false, label: \"Fecha Fin\" },\r\n    // { id: \"admin\", numeric: false, disablePadding: false, label: \"Admin\" },\r\n\r\n\r\n  ];\r\n  \r\n  //Creacion del encabezado\r\n  function EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort } = props;\r\n  \r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <StyledTableRow>\r\n          {headCells.map((headCell) => (\r\n            <StyledTableCell\r\n              key={headCell.id}\r\n              align=\"center\"\r\n              // align={headCell.numeric ? \"right\" : \"left\"}\r\n              padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </StyledTableCell>\r\n          ))}\r\n        </StyledTableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n\r\n\r\nconst TableWork = ({data}) => {\r\n\r\n        const classes = useStylesTableWork();\r\n\r\n        //state del componente\r\n        const [order, setOrder] = React.useState(\"asc\");\r\n        const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n        const [page, setPage] = React.useState(0);\r\n        const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n      \r\n        //handle change\r\n        const handleRequestSort = (event, property) => {\r\n          const isAsc = orderBy === property && order === \"asc\";\r\n          setOrder(isAsc ? \"desc\" : \"asc\");\r\n          setOrderBy(property);\r\n        };\r\n      \r\n        // data\r\n        const sales1 = data.map((item) => {\r\n          return createData(\r\n            item.id,\r\n            item.name,\r\n            item.state,\r\n            item.stateampliation,\r\n            item.codeaccess,\r\n            item.codeampliation,\r\n            item.timestart,\r\n            item.timefinish,\r\n            item.datestart,\r\n            item.datefinished,\r\n            item.admin\r\n          );\r\n        });\r\n      \r\n        const handleChangePage = (event, newPage) => {\r\n          setPage(newPage);\r\n        };\r\n      \r\n        const handleChangeRowsPerPage = (event) => {\r\n          setRowsPerPage(parseInt(event.target.value, 10));\r\n          setPage(0);\r\n        };\r\n      \r\n        const emptyRows =\r\n          rowsPerPage - Math.min(rowsPerPage, sales1.length - page * rowsPerPage);\r\n      \r\n    return (\r\n          <div>\r\n            <Paper className={classes.paper} >\r\n              <TableContainer className={classes.tableContainerStyle} >\r\n                <Table\r\n                  className={classes.table}\r\n                  aria-labelledby=\"tableTitle\"\r\n                  aria-label=\"enhanced table\"\r\n                  // id=\"pdfdiv\"\r\n                >\r\n                  <EnhancedTableHead\r\n                    classes={classes}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={sales1.length}\r\n                  />\r\n                  <TableBody>\r\n                    {stableSort(sales1, getComparator(order, orderBy))\r\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                      .map((row, index) => {\r\n                        const labelId = `enhanced-table-checkbox-${index}`;\r\n                        // if (row.status === 1) {\r\n                        return (\r\n                          <StyledTableRow tabIndex={-1} key={index}>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.id}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell\r\n                              component=\"th\"\r\n                              id={labelId}\r\n                              align=\"center\"\r\n                              scope=\"row\"\r\n                              padding=\"none\"\r\n                            >\r\n                              {row.name}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.state}\r\n                            </StyledTableCell>\r\n                            {/* <StyledTableCell align=\"center\">\r\n                              {row.stateampliation}\r\n                            </StyledTableCell> */}\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.codeaccess}\r\n                            </StyledTableCell>\r\n                            {/* <StyledTableCell align=\"center\">\r\n                              {row.codeampliation}\r\n                            </StyledTableCell> */}\r\n                            {/* <StyledTableCell align=\"center\">\r\n                              {row.timestart}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.timefinish}\r\n                            </StyledTableCell> */}\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.datestart}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.datefinished}\r\n                            </StyledTableCell>\r\n                            {/* <StyledTableCell align=\"center\">\r\n                              {row.admin}\r\n                            </StyledTableCell> */}\r\n                          </StyledTableRow>\r\n                        );\r\n                      })}\r\n      \r\n                    {emptyRows > 0 && (\r\n                      <TableRow>\r\n                        <StyledTableCell colSpan={14} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 20, 30]}\r\n                labelRowsPerPage=\"Filas por Página\"\r\n                component=\"div\"\r\n                count={sales1.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </Paper>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default TableWork\r\n\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormCode\\FormCode.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableCode\\TableCode.jsx",["255"],"import { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, withStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useStylesTableForm } from './TableCode.css';\r\n\r\n//Estilos de la tabla del encabezado y contenido\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"white\",\r\n      minWidth: \"165px\",\r\n      \"&:hover\":{\r\n        color: \"white\",\r\n      }\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  \r\n  //Creando data de la tabla\r\n  function createData(\r\n    id,\r\n    value,\r\n    state,\r\n    buildid,\r\n    dateinit,\r\n    datefinish,\r\n    email\r\n  ) {\r\n    return { id, value, state, buildid, dateinit, datefinish, email };\r\n  }\r\n  \r\n  //Ascendente y descendente de la tabla\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  function getComparator(order, orderBy) {\r\n    return order === \"desc\"\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  \r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  \r\n  //Encabezados de la tabla\r\n  const headCells = [\r\n    {id: \"id\",numeric: true,disablePadding: false,label: \"ID\"},\r\n    {id: \"value\",numeric: true,disablePadding: false,label: \"Codigo\"},\r\n    { id: \"state\", numeric: false, disablePadding: false, label: \"Estado\" },\r\n    { id: \"buildid\", numeric: false, disablePadding: false, label: \"ID Obra\" },\r\n    { id: \"dateinit\", numeric: false, disablePadding: false, label: \"Dia Inicio\" },\r\n    { id: \"datefinish\", numeric: false, disablePadding: false, label: \"Dia Final\" },\r\n    { id: \"email\", numeric: false, disablePadding: false, label: \"Email\" },\r\n\r\n  ];\r\n  \r\n  //Creacion del encabezado\r\n  function EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort } = props;\r\n  \r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <StyledTableRow>\r\n          {headCells.map((headCell) => (\r\n            <StyledTableCell\r\n              key={headCell.id}\r\n              align=\"center\"\r\n              // align={headCell.numeric ? \"right\" : \"left\"}\r\n              padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </StyledTableCell>\r\n          ))}\r\n        </StyledTableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n\r\n\r\nconst TableCode = ({data}) => {\r\n\r\n        const classes = useStylesTableForm();\r\n\r\n        //state del componente\r\n        const [order, setOrder] = React.useState(\"asc\");\r\n        const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n        const [page, setPage] = React.useState(0);\r\n        const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n      \r\n        //handle change\r\n        const handleRequestSort = (event, property) => {\r\n          const isAsc = orderBy === property && order === \"asc\";\r\n          setOrder(isAsc ? \"desc\" : \"asc\");\r\n          setOrderBy(property);\r\n        };\r\n      \r\n        // data\r\n        const sales1 = data.map((item) => {\r\n          return createData(\r\n            item.id,\r\n            item.value,\r\n            item.state,\r\n            item.buildid,\r\n            item.dateinit,\r\n            item.datefinish,\r\n            item.email\r\n\r\n          );\r\n        });\r\n      \r\n        const handleChangePage = (event, newPage) => {\r\n          setPage(newPage);\r\n        };\r\n      \r\n        const handleChangeRowsPerPage = (event) => {\r\n          setRowsPerPage(parseInt(event.target.value, 10));\r\n          setPage(0);\r\n        };\r\n      \r\n        const emptyRows =\r\n          rowsPerPage - Math.min(rowsPerPage, sales1.length - page * rowsPerPage);\r\n      \r\n    return (\r\n          <div>\r\n            <Paper className={classes.paper}>\r\n              <TableContainer className={classes.tableContainerStyle}>\r\n                <Table\r\n                  className={classes.table}\r\n                  aria-labelledby=\"tableTitle\"\r\n                  aria-label=\"enhanced table\"\r\n                  id=\"pdfdiv\"\r\n                >\r\n                  <EnhancedTableHead\r\n                    classes={classes}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={sales1.length}\r\n                  />\r\n                  <TableBody>\r\n                    {stableSort(sales1, getComparator(order, orderBy))\r\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                      .map((row, index) => {\r\n                        const labelId = `enhanced-table-checkbox-${index}`;\r\n                        // if (row.status === 1) {\r\n                        return (\r\n                          <StyledTableRow tabIndex={-1} key={index}>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.id}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell\r\n                              component=\"th\"\r\n                              id={labelId}\r\n                              align=\"center\"\r\n                              scope=\"row\"\r\n                              padding=\"none\"\r\n                            >\r\n                              {row.value}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.state}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.buildid}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.dateinit}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.datefinish}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {row.email}\r\n                            </StyledTableCell>\r\n                          </StyledTableRow>\r\n                        );\r\n                      })}\r\n      \r\n                    {emptyRows > 0 && (\r\n                      <TableRow>\r\n                        <StyledTableCell colSpan={14} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                labelRowsPerPage=\"Filas por Página\"\r\n                component=\"div\"\r\n                count={sales1.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </Paper>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default TableCode\r\n\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Menu\\Menu.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableCode\\TableCode.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\TableWork\\TableWork.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Menu\\Menu.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.jsx",["256"],"\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { workContext } from '../../context/workContext'\r\nimport ButtonPrimary from '../ButtonPrimary/ButtonPrimary'\r\nimport { useStylesSteepComplete } from './SteepComplete.css'\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nconst SteepComplete = ({handleReset}) => {\r\n\r\n\r\n    const {workinit} = React.useContext(workContext)\r\n    \r\n\r\n    const classes= useStylesSteepComplete()\r\n\r\n    const handleConfirm = () => {\r\n\r\n        const dateTime = Date.now();\r\n        const timestamp = Math.floor(dateTime / 1000);\r\n\r\n        firebase.database().ref('/obras/' + timestamp).set({\r\n            datefinished: workinit.day_init,\r\n            datestart: workinit.day_final,\r\n            id: timestamp,\r\n            name : workinit.namework,\r\n            timefinish: workinit.time_init,\r\n            timestart: workinit.time_final,\r\n          });\r\n\r\n        for(const dni of workinit.workers){\r\n            firebase.database().ref(\"obreros\").child(dni).child(\"obraid\").set(timestamp)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Typography className={classes.title}>{workinit.namework}</Typography>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Fecha Inicial:</strong> {workinit.day_init}\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Fecha Final:</strong> {workinit.day_final}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Hora de Entrada:</strong> {workinit.time_init}\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Hora de Salida:</strong> {workinit.time_final}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Encargado de Asistencia:</strong> {workinit.workris}\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Email para Reportes:</strong> {workinit.emailreport}\r\n                </Grid>\r\n            </Grid>\r\n            <Typography className={classes.grid} style={{textAlign:'center'}}><strong>Obreros</strong></Typography>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={6} className={classes.griditem}>\r\n                    <Typography><strong>Nombre</strong></Typography>\r\n                    {\r\n                        workinit.workersname.map(item =>{\r\n                            return <Typography>{item}</Typography>\r\n                        })\r\n                    }\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={6} className={classes.griditem}>\r\n                    <Typography><strong>DNI</strong></Typography>\r\n                    {\r\n                        workinit.workers.map(item =>{\r\n                            return <Typography>{item}</Typography>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditembtn}>\r\n                    <ButtonPrimary text=\"Confirmar\" onClick={handleConfirm}></ButtonPrimary>\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditembtn}>\r\n                    <ButtonPrimary text=\"Rehacer\" onClick={handleReset}></ButtonPrimary>\r\n                </Grid>\r\n            </Grid>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepComplete\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepThree\\SteepThree.jsx",["257"],"import { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\nimport { workContext } from '../../context/workContext';\r\nimport { STEPTHREE_WORK } from '../../types/workTypes';\r\n\r\n\r\nconst SteepThree = ({handleNext}) => {\r\n\r\n\r\n    const [data, setdata] = useState({\r\n        datos :[]\r\n    })\r\n\r\n    const [info,setInfo] = useState({\r\n        emailreport:'',\r\n        dniris:''\r\n    })\r\n\r\n    const array = []\r\n\r\n    const addArray = (array) =>{\r\n        setdata({\r\n            datos:array\r\n        })\r\n    }\r\n\r\n\r\n    const handleChange = (e) =>{\r\n        console.log(e.target.name)\r\n        setInfo({\r\n            ...info,\r\n            [e.target.name]:e.target.value\r\n        })\r\n      }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref('/RIS').once('value',function(snapshot){\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().id\r\n                    let name = ChildSnapshot.val().name\r\n                    // let lastname = ChildSnapshot.val().lastname\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name,\r\n                        // lastname\r\n                    }\r\n                    array.push(objeto)\r\n                    console.log(array)\r\n                    addArray(array)\r\n                }\r\n            )\r\n        })\r\n    }, [])\r\n\r\n    const {dispatchwork} = React.useContext(workContext)\r\n\r\n    const handleEnvio = () => {\r\n        dispatchwork({\r\n            type: STEPTHREE_WORK,\r\n            payload:{\r\n                workris: info.dniris,\r\n                emailreport: info.emailreport\r\n            }\r\n        })\r\n        handleNext()\r\n    }\r\n\r\n    console.log(info)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container >\r\n                <Grid item xs={12} md={12} sm={12}>\r\n                    <TextField\r\n                    fullWidth={true}\r\n                    type=\"email\"\r\n                    label=\"Correo electronico para reportes\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese correo electronico\"\r\n                    onChange={handleChange}\r\n                    name=\"emailreport\"\r\n                    value={info.emailreport}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <br></br>\r\n            <Grid container >\r\n                <Grid item xs={12} md={12} sm={12}>\r\n                    <FormControl variant=\"outlined\" fullWidth={true}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Encargado de Asistencia\r\n                        </InputLabel>\r\n                        <Select\r\n                            value={info.dniris}\r\n                            onChange={handleChange}\r\n                            label=\"Encargado de Asistencia\"\r\n                            name=\"dniris\"\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                            <em>Escoger encargado</em>\r\n                            </MenuItem>\r\n                            {\r\n                               data.datos.map((item,index) => {\r\n                                return(\r\n                                    <MenuItem value={item.numberdoc} key={index} >{item.name}</MenuItem>\r\n                                )\r\n                               }) \r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <br></br>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                <Button variant=\"contained\" color=\"primary\" \r\n                onClick={handleEnvio} \r\n                // className={classes.btncontinuar}\r\n                >Continuar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepThree\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.jsx",["258"],"import React , { useState, useEffect, useContext }from 'react'\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { useStylesSteppTwo } from './SteepTwo.css'\r\nimport { workContext } from '../../context/workContext';\r\nimport { STEPTWO_WORK } from '../../types/workTypes';\r\n\r\nconst SteepTwo = ({handleNext}) => {\r\n\r\n    const classes = useStylesSteppTwo()\r\n\r\n    const [data, setdata] = useState({\r\n        datos :[]\r\n    })\r\n\r\n    const [workers, setworkers] = useState({\r\n        obreros:[],\r\n        obrerosname:[]\r\n    })\r\n\r\n    const array = []\r\n\r\n    const {dispatchwork} = useContext(workContext)\r\n\r\n\r\n    const addArray = (array) =>{\r\n        setdata({\r\n            datos:array\r\n        })\r\n    }\r\n\r\n    const getValue = (e) =>{\r\n        console.log(e.target.value)\r\n        const exist = workers.obreros.some(item => item === e.target.value)\r\n        const existname = workers.obrerosname.some(item => item === e.target.name)\r\n\r\n        if(exist && existname){\r\n            const filter = workers.obreros.filter(item => item !== e.target.value)\r\n            const filtername = workers.obrerosname.filter(item => item !== e.target.name)\r\n            setworkers({\r\n                ...workers,\r\n                obreros:filter,\r\n                obrerosname:filtername\r\n            })\r\n\r\n        }else{\r\n            setworkers({\r\n                ...workers,\r\n                obreros:[...workers.obreros,e.target.value],\r\n                obrerosname:[...workers.obrerosname,e.target.name]\r\n\r\n            })\r\n        }             \r\n    }\r\n\r\n    console.log(workers) \r\n\r\n    const handleEnvio = async () =>{\r\n\r\n        await dispatchwork({\r\n            type: STEPTWO_WORK,\r\n            payload:{\r\n                workers: workers.obreros,\r\n                workersname: workers.obrerosname,\r\n                totalworkers: workers.obreros.length\r\n            }\r\n        })\r\n        handleNext()\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref('/obreros').once('value',function(snapshot){\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().dni\r\n                    let name = ChildSnapshot.val().name\r\n                    let lastname = ChildSnapshot.val().lastname\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name,\r\n                        lastname\r\n                    }\r\n                    array.push(objeto)\r\n                    console.log(array)\r\n                    addArray(array)\r\n                }\r\n            )\r\n        })\r\n    }, [])\r\n\r\n\r\n    console.log(data.datos)\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" color=\"initial\">Lista de obreros</Typography>\r\n            {\r\n               data.datos.map((item,index) => {\r\n                   return (\r\n                    <div style={{display:'flex',alignItems:'center'}} key={index}>\r\n                    <Checkbox \r\n                    color=\"primary\" \r\n                    value={item.numberdoc}\r\n                    name={`${item.name} ${item.lastname}`}\r\n                    onChange={(e)=>getValue(e)}></Checkbox>\r\n                    <Typography variant=\"body2\" color=\"initial\">{item.name} {item.lastname}</Typography>\r\n                    </div>\r\n                   )\r\n               }) \r\n            }\r\n             <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEnvio} className={classes.btncontinuar}>Continuar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepTwo\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.jsx",["259"],"/* eslint-disable eqeqeq */\r\nimport { Button, Grid, TextField } from '@material-ui/core'\r\nimport React , { useState , useEffect, useContext } from 'react'\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\n// import firebase from 'firebase/app';\r\n// import \"firebase/auth\";\r\n// import \"firebase/database\"\r\n\r\nimport { useStylesSteppOne } from './SteepOne.css'\r\nimport { workContext } from '../../context/workContext';\r\nimport { STEPONE_WORK } from '../../types/workTypes';\r\n\r\nconst SteepOne = ({handleNext,handleBack}) => {\r\n\r\n\r\n    const classes = useStylesSteppOne()\r\n\r\n    const [ obra, setObra ] = useState({\r\n        name:'',\r\n        day_init: new Date(),\r\n        day_final: new Date(),\r\n        hour_init: new Date(),\r\n        hour_final: new Date()\r\n    })\r\n\r\n    const handleChange = (e) =>{\r\n        setObra({\r\n            ...obra,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n        new Date()\r\n    );\r\n\r\n    const [selectedDate1, setSelectedDate1] = React.useState(\r\n        new Date()\r\n    );\r\n\r\n    const [selectedDate2, setSelectedDate2] = React.useState(\r\n        new Date()\r\n    );\r\n\r\n    const [selectedDate3, setSelectedDate3] = React.useState(\r\n        new Date()\r\n      );\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const handleDateChange1 = (date) => {\r\n        setSelectedDate1(date);\r\n    };\r\n    \r\n    const handleDateChange2 = (date) => {\r\n        setSelectedDate2(date);\r\n    };\r\n\r\n    const handleDateChange3 = (date) => {\r\n        setSelectedDate3(date);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setObra({\r\n          ...obra,\r\n          day_init: selectedDate,\r\n          day_final: selectedDate1,\r\n          hour_init: selectedDate2,\r\n          hour_final: selectedDate3,\r\n        });\r\n      }, [selectedDate,selectedDate1,selectedDate2,selectedDate3]);\r\n\r\n\r\n    function getDateFormat(date) {\r\n        const newDate = new Date(date);\r\n        let year = newDate.getFullYear().toString();\r\n        let month = (newDate.getMonth() + 1).toString();\r\n        let day = newDate.getDate().toString();\r\n      \r\n        day.length == 1 && (day = '0' + day);\r\n        month.length == 1 && (month = '0' + month);\r\n        let yyyymmdd = day + '/' + month + '/' + year;\r\n    \r\n        return yyyymmdd;  \r\n      }\r\n      \r\n\r\n      function getDatetimeFormat(date) {\r\n        // let yyyymmdd = getDateFormat(date);\r\n        \r\n        const newDate = new Date(date)\r\n        let hour = '' + newDate.getHours();\r\n        if (hour.length == 1) {\r\n          hour = '0' + hour;\r\n        }\r\n      \r\n        let minute = '' + newDate.getMinutes();\r\n        if (minute.length == 1) {\r\n          minute = '0' + minute;\r\n        }\r\n      \r\n        let second = '' + newDate.getSeconds();\r\n        if (second.length == 1) {\r\n          second = '0' + second;\r\n        }\r\n      \r\n        // return yyyymmdd + ' ' + hour + ':' + minute + ':' + second;\r\n        return  hour + ':' + minute + ':' + second;\r\n    \r\n      }\r\n\r\n\r\n    const {dispatchwork} = useContext(workContext)\r\n\r\n\r\n    const handleEnvio = async () =>{\r\n\r\n        await dispatchwork({\r\n            type: STEPONE_WORK,\r\n            payload:{\r\n                namework: obra.name,\r\n                day_init: getDateFormat(obra.day_init),\r\n                day_final: getDateFormat(obra.day_final),\r\n                time_init: getDatetimeFormat(obra.hour_init),\r\n                time_final: getDatetimeFormat(obra.hour_final), \r\n            }\r\n        })\r\n\r\n        handleNext()\r\n\r\n        // const dateTime = Date.now();\r\n        // const timestamp = Math.floor(dateTime / 1000);\r\n\r\n        // firebase.database().ref('/obras/' + timestamp).set({\r\n        //     datefinished: getDateFormat(obra.day_final),\r\n        //     datestart: getDateFormat(obra.day_init),\r\n        //     id: timestamp,\r\n        //     name : obra.name,\r\n        //     timefinish: getDatetimeFormat(obra.hour_final),\r\n        //     timestart: getDatetimeFormat(obra.hour_init),\r\n        //   });\r\n    }\r\n    \r\n\r\n    // const [data,setData] = useState({\r\n    //     datos:[]\r\n    // })\r\n\r\n\r\n    // const array = []\r\n\r\n    // const algo = (array) =>{\r\n    //     setData({\r\n    //         datos:array\r\n    //     })\r\n    // }\r\n\r\n    // const intento = () =>{\r\n    //     firebase.database().ref('/obras').once('value',function(snapshot){\r\n    //         snapshot.forEach(\r\n    //             function(ChildSnapshot){\r\n    //                 let datefinished = ChildSnapshot.val().datefinished\r\n    //                 let name = ChildSnapshot.val().name\r\n    //                 let objeto ={\r\n    //                     datefinished,\r\n    //                     name\r\n    //                 }\r\n    //                 array.push(objeto)\r\n    //                 console.log(array)\r\n    //                 algo(array)\r\n    //             }\r\n    //         )\r\n    //     })\r\n    // }\r\n         \r\n    \r\n\r\n    return ( \r\n        <div style={{margin:'20px'}}>\r\n            <Grid container className={classes.containerfield}>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                    fullWidth={true}\r\n                    type=\"email\"\r\n                    label=\"Nombre de la obra \"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese nombre de la obra\"\r\n                    onChange={handleChange}\r\n                    name=\"name\"\r\n                    value={obra.name}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.containerfield} >\r\n                <Grid item xs={12} sm={6} md={6} >\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardDatePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            minDate={new Date()}\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            label=\"Fecha de inicio\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                            // name=\"day_init\"\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6} style={{display:'flex',justifyContent:'flex-end'}}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardDatePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            minDate={new Date()}\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            label=\"Fecha de fin\"\r\n                            value={selectedDate1}\r\n                            onChange={handleDateChange1}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                            name=\"day_final\"\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.containerfield} >\r\n                <Grid item xs={12} sm={6} md={6} >\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardTimePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            label=\"Hora de ingreso\"\r\n                            value={selectedDate2}\r\n                            onChange={handleDateChange2}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6} style={{display:'flex',justifyContent:'flex-end'}}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardTimePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            label=\"Hora de salida\"\r\n                            value={selectedDate3}\r\n                            onChange={handleDateChange3}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n            </Grid>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEnvio} className={classes.btncontinuar}>Continuar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepOne\r\n","C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\firebase\\firebase.config.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.css.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\actions\\empresasAction.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\reducer\\empresasReducer.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\context\\empresasContext.jsx",[],"C:\\Users\\pc\\Desktop\\freelancer\\constructorapp-frontend\\src\\views\\ObraMensual.jsx",["260","261"],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":10,"column":23,"nodeType":"268","messageId":"269","endLine":10,"endColumn":29},{"ruleId":"266","severity":1,"message":"270","line":51,"column":13,"nodeType":"268","messageId":"269","endLine":51,"endColumn":24},{"ruleId":"266","severity":1,"message":"271","line":73,"column":13,"nodeType":"268","messageId":"269","endLine":73,"endColumn":16},{"ruleId":"266","severity":1,"message":"272","line":1,"column":18,"nodeType":"268","messageId":"269","endLine":1,"endColumn":29},{"ruleId":"266","severity":1,"message":"273","line":1,"column":31,"nodeType":"268","messageId":"269","endLine":1,"endColumn":41},{"ruleId":"266","severity":1,"message":"274","line":1,"column":43,"nodeType":"268","messageId":"269","endLine":1,"endColumn":51},{"ruleId":"266","severity":1,"message":"275","line":1,"column":53,"nodeType":"268","messageId":"269","endLine":1,"endColumn":59},{"ruleId":"276","severity":1,"message":"277","line":69,"column":7,"nodeType":"278","endLine":69,"endColumn":17,"suggestions":"279"},{"ruleId":"266","severity":1,"message":"280","line":78,"column":17,"nodeType":"268","messageId":"269","endLine":78,"endColumn":27},{"ruleId":"281","severity":1,"message":"282","line":84,"column":17,"nodeType":"268","messageId":"283","endLine":84,"endColumn":27},{"ruleId":"266","severity":1,"message":"284","line":84,"column":17,"nodeType":"268","messageId":"269","endLine":84,"endColumn":27},{"ruleId":"266","severity":1,"message":"285","line":6,"column":10,"nodeType":"268","messageId":"269","endLine":6,"endColumn":20},{"ruleId":"266","severity":1,"message":"286","line":24,"column":17,"nodeType":"268","messageId":"269","endLine":24,"endColumn":25},{"ruleId":"276","severity":1,"message":"287","line":247,"column":6,"nodeType":"278","endLine":247,"endColumn":8,"suggestions":"288"},{"ruleId":"276","severity":1,"message":"289","line":253,"column":6,"nodeType":"278","endLine":253,"endColumn":21,"suggestions":"290"},{"ruleId":"266","severity":1,"message":"291","line":13,"column":17,"nodeType":"268","messageId":"269","endLine":13,"endColumn":24},{"ruleId":"266","severity":1,"message":"292","line":36,"column":25,"nodeType":"268","messageId":"269","endLine":36,"endColumn":31},{"ruleId":"276","severity":1,"message":"293","line":69,"column":8,"nodeType":"278","endLine":69,"endColumn":10,"suggestions":"294"},{"ruleId":"266","severity":1,"message":"295","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":27},{"ruleId":"266","severity":1,"message":"296","line":4,"column":29,"nodeType":"268","messageId":"269","endLine":4,"endColumn":37},{"ruleId":"266","severity":1,"message":"297","line":12,"column":56,"nodeType":"268","messageId":"269","endLine":12,"endColumn":67},{"ruleId":"266","severity":1,"message":"298","line":12,"column":8,"nodeType":"268","messageId":"269","endLine":12,"endColumn":16},{"ruleId":"276","severity":1,"message":"299","line":42,"column":8,"nodeType":"278","endLine":42,"endColumn":22,"suggestions":"300"},{"ruleId":"266","severity":1,"message":"301","line":56,"column":14,"nodeType":"268","messageId":"269","endLine":56,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":62,"column":18,"nodeType":"304","messageId":"305","endLine":62,"endColumn":20},{"ruleId":"302","severity":1,"message":"303","line":63,"column":20,"nodeType":"304","messageId":"305","endLine":63,"endColumn":22},{"ruleId":"266","severity":1,"message":"306","line":1,"column":10,"nodeType":"268","messageId":"269","endLine":1,"endColumn":16},{"ruleId":"266","severity":1,"message":"306","line":1,"column":10,"nodeType":"268","messageId":"269","endLine":1,"endColumn":16},{"ruleId":"266","severity":1,"message":"306","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":16},{"ruleId":"276","severity":1,"message":"307","line":62,"column":8,"nodeType":"278","endLine":62,"endColumn":10,"suggestions":"308"},{"ruleId":"276","severity":1,"message":"307","line":97,"column":8,"nodeType":"278","endLine":97,"endColumn":10,"suggestions":"309"},{"ruleId":"276","severity":1,"message":"310","line":81,"column":10,"nodeType":"278","endLine":81,"endColumn":66,"suggestions":"311"},{"ruleId":"266","severity":1,"message":"285","line":8,"column":3,"nodeType":"268","messageId":"269","endLine":8,"endColumn":13},{"ruleId":"276","severity":1,"message":"312","line":155,"column":6,"nodeType":"278","endLine":155,"endColumn":8,"suggestions":"313"},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"no-unused-vars","'Dialog' is defined but never used.","Identifier","unusedVar","'fechapuesto' is assigned a value but never used.","'ruc' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'obtenerData'. Either include it or remove the dependency array.","ArrayExpression",["316"],"'pageHeight' is assigned a value but never used.","no-redeclare","'heightLeft' is already defined.","redeclared","'heightLeft' is assigned a value but never used.","'fechaDehoy' is defined but never used.","'setFecha' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'obtenerDataPorEmpresas' and 'obtenerDatosGeneral'. Either include them or remove the dependency array.",["317"],"React Hook React.useEffect has a missing dependency: 'obtenerDataAsistenciaGeneral'. Either include it or remove the dependency array.",["318"],"'setInfo' is assigned a value but never used.","'objeto' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'array'. Either include it or remove the dependency array.",["319"],"'LoginwithFirebase' is defined but never used.","'UserType' is defined but never used.","'LOGOUT_USER' is defined but never used.","'firebase' is defined but never used.","React Hook useEffect has a missing dependency: 'worker'. Either include it or remove the dependency array. You can also do a functional update 'setWorker(w => ...)' if you only need 'worker' in the 'setWorker' call.",["320"],"'getDateFormat' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'array'. Either include it or remove the dependency array.",["321"],["322"],"React Hook useEffect has a missing dependency: 'obra'. Either include it or remove the dependency array. You can also do a functional update 'setObra(o => ...)' if you only need 'obra' in the 'setObra' call.",["323"],"React Hook React.useEffect has missing dependencies: 'obtenerDatosGeneral' and 'obtenerFechasyCantidad'. Either include them or remove the dependency array.",["324"],"no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"331","fix":"335"},{"desc":"331","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},"Update the dependencies array to be: [obtenerData, typeData]",{"range":"341","text":"342"},"Update the dependencies array to be: [obtenerDataPorEmpresas, obtenerDatosGeneral]",{"range":"343","text":"344"},"Update the dependencies array to be: [nombre, obtenerDataAsistenciaGeneral, total]",{"range":"345","text":"346"},"Update the dependencies array to be: [array]",{"range":"347","text":"348"},"Update the dependencies array to be: [selectedDate, worker]",{"range":"349","text":"350"},{"range":"351","text":"348"},{"range":"352","text":"348"},"Update the dependencies array to be: [obra, selectedDate, selectedDate1, selectedDate2, selectedDate3]",{"range":"353","text":"354"},"Update the dependencies array to be: [obtenerDatosGeneral, obtenerFechasyCantidad]",{"range":"355","text":"356"},[2252,2262],"[obtenerData, typeData]",[8819,8821],"[obtenerDataPorEmpresas, obtenerDatosGeneral]",[8949,8964],"[nombre, obtenerDataAsistenciaGeneral, total]",[1977,1979],"[array]",[966,980],"[selectedDate, worker]",[1572,1574],[2796,2798],[2030,2086],"[obra, selectedDate, selectedDate1, selectedDate2, selectedDate3]",[4677,4679],"[obtenerDatosGeneral, obtenerFechasyCantidad]"]