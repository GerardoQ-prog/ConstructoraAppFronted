[{"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\Home.jsx":"4","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\reportRoute.jsx":"5","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\risRoute.jsx":"6","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\reducer\\userReducer.jsx":"7","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\state\\userState.jsx":"8","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\context\\userContext.jsx":"9","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\adminRoute.jsx":"10","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\types\\userTypes.jsx":"11","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\themeGlobal.jsx":"12","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\Login.jsx":"13","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.jsx":"14","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.css.jsx":"15","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.jsx":"16","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.css.jsx":"17","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\firebase\\firebase.config.jsx":"18","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\actions\\userAction.jsx":"19","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\routers\\admin.jsx":"20","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\routers\\login.jsx":"21","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\loginRoute.jsx":"22","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\RIS.jsx":"23","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.jsx":"24","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.jsx":"25","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Menu\\Menu.jsx":"26","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.css.jsx":"27","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.css.jsx":"28","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Menu\\Menu.css.jsx":"29","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.jsx":"30","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.css.jsx":"31","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.jsx":"32","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.jsx":"33","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepThree\\SteepThree.jsx":"34","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\Reportes.jsx":"35","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\Worker.jsx":"36","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\FormWorker\\FormWorker.jsx":"37","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.css.jsx":"38","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\reducer\\workReducer.jsx":"39","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\state\\workState.jsx":"40","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\context\\workContext.jsx":"41","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\types\\workTypes.jsx":"42","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.css.jsx":"43","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.jsx":"44","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.css.jsx":"45","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\helpers\\textDate.js":"46"},{"size":500,"mtime":1606529618840,"results":"47","hashOfConfig":"48"},{"size":3878,"mtime":1608089324785,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1606529618840,"results":"50","hashOfConfig":"48"},{"size":3121,"mtime":1611382385109,"results":"51","hashOfConfig":"48"},{"size":157,"mtime":1607622089429,"results":"52","hashOfConfig":"53"},{"size":151,"mtime":1607622095729,"results":"54","hashOfConfig":"53"},{"size":1078,"mtime":1607882334256,"results":"55","hashOfConfig":"48"},{"size":135,"mtime":1607882331657,"results":"56","hashOfConfig":"48"},{"size":90,"mtime":1607622103600,"results":"57","hashOfConfig":"48"},{"size":541,"mtime":1607803994031,"results":"58","hashOfConfig":"53"},{"size":188,"mtime":1607798748734,"results":"59","hashOfConfig":"48"},{"size":696,"mtime":1607886913138,"results":"60","hashOfConfig":"48"},{"size":200,"mtime":1607786809875,"results":"61","hashOfConfig":"48"},{"size":4848,"mtime":1611378149606,"results":"62","hashOfConfig":"48"},{"size":1505,"mtime":1607706226166,"results":"63","hashOfConfig":"48"},{"size":466,"mtime":1607716101709,"results":"64","hashOfConfig":"48"},{"size":664,"mtime":1607706403318,"results":"65","hashOfConfig":"48"},{"size":617,"mtime":1607901576064,"results":"66","hashOfConfig":"48"},{"size":145,"mtime":1607788530032,"results":"67","hashOfConfig":"53"},{"size":475,"mtime":1607804484836,"results":"68","hashOfConfig":"53"},{"size":164,"mtime":1607802831170,"results":"69","hashOfConfig":"53"},{"size":539,"mtime":1607803634159,"results":"70","hashOfConfig":"53"},{"size":149,"mtime":1607805819377,"results":"71","hashOfConfig":"48"},{"size":1764,"mtime":1607883036485,"results":"72","hashOfConfig":"48"},{"size":612,"mtime":1607901179713,"results":"73","hashOfConfig":"48"},{"size":4187,"mtime":1607901527561,"results":"74","hashOfConfig":"48"},{"size":858,"mtime":1607880336520,"results":"75","hashOfConfig":"48"},{"size":330,"mtime":1607879809322,"results":"76","hashOfConfig":"48"},{"size":847,"mtime":1607880496525,"results":"77","hashOfConfig":"48"},{"size":2112,"mtime":1609094554210,"results":"78","hashOfConfig":"48"},{"size":873,"mtime":1607885746514,"results":"79","hashOfConfig":"48"},{"size":3843,"mtime":1609088337084,"results":"80","hashOfConfig":"48"},{"size":9902,"mtime":1608090551038,"results":"81","hashOfConfig":"48"},{"size":4146,"mtime":1609089537652,"results":"82","hashOfConfig":"48"},{"size":3177,"mtime":1609096110919,"results":"83","hashOfConfig":"48"},{"size":407,"mtime":1607903480684,"results":"84","hashOfConfig":"48"},{"size":7646,"mtime":1608004049869,"results":"85","hashOfConfig":"48"},{"size":346,"mtime":1608088303734,"results":"86","hashOfConfig":"48"},{"size":1123,"mtime":1609088367819,"results":"87","hashOfConfig":"48"},{"size":230,"mtime":1609092955678,"results":"88","hashOfConfig":"48"},{"size":88,"mtime":1608088590568,"results":"89","hashOfConfig":"48"},{"size":201,"mtime":1608089106127,"results":"90","hashOfConfig":"48"},{"size":289,"mtime":1608090527791,"results":"91","hashOfConfig":"48"},{"size":4084,"mtime":1609094469885,"results":"92","hashOfConfig":"48"},{"size":755,"mtime":1609092884996,"results":"93","hashOfConfig":"48"},{"size":287,"mtime":1611380675422,"results":"94","hashOfConfig":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1rjfq0w",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"6z4hge",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"97"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"97"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"97"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"97"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\index.js",[],["198","199"],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\App.js",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\Home.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\reportRoute.jsx",[],["200","201"],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\risRoute.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\reducer\\userReducer.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\state\\userState.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\context\\userContext.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\adminRoute.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\types\\userTypes.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\themeGlobal.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\Login.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.jsx",["202","203","204"],"import { Grid, TextField, Typography } from '@material-ui/core'\r\nimport React , { useState, useContext } from 'react'\r\nimport { userContext } from '../../context/userContext'\r\nimport { LoginwithFirebase, UserType } from '../../firebase/firebase.config'\r\nimport ButtonPrimary from '../ButtonPrimary/ButtonPrimary'\r\nimport { useStylesFormLogin } from './FormLogin.css'\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nimport { ADD_OTHERDATOS_USER, ADD_UID_USER, LOGIN_USER,LOGOUT_USER } from '../../types/userTypes';\r\n\r\nconst FormLogin = () => {\r\n\r\n    const classes = useStylesFormLogin()\r\n\r\n    const [login, setLogin] = useState({\r\n        email:'',\r\n        password:''\r\n    }) \r\n    const { email , password } = login\r\n    \r\n    const handleChange = (e) => {\r\n        setLogin({\r\n            ...login,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const { dispatch } = useContext(userContext)\r\n\r\n    const LoginwithFirebase = (email,password) => {\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then((user) => {\r\n            const uid = user.user.uid\r\n            console.log('user',uid);\r\n            dispatch({\r\n                type:ADD_UID_USER,\r\n                payload: uid\r\n            })\r\n            UserType(uid)\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.log('error',error);\r\n           \r\n        });\r\n    \r\n        \r\n        }\r\n    \r\n        const UserType = (uid) => {\r\n    \r\n            // let data\r\n            // var starCountRef = firebase.database().ref('/users/' + uid);\r\n            // starCountRef.on('value', (snapshot) =>{\r\n            // data = snapshot.val();\r\n            //     console.log(data)\r\n            //     return data        \r\n            // });\r\n            firebase.database().ref('/users/'+ uid).once('value')\r\n            .then((snapshot) => {\r\n                const type = (snapshot.val() && snapshot.val().type) ;\r\n                const name = (snapshot.val() && snapshot.val().name) ;\r\n                const email = (snapshot.val() && snapshot.val().email) ;\r\n                console.log('tipo usser',type)\r\n                dispatch({\r\n                    type:ADD_OTHERDATOS_USER,\r\n                    payload:{\r\n                        type,\r\n                        name,\r\n                        email\r\n                    }\r\n                })\r\n                dispatch({\r\n                    type:LOGIN_USER,\r\n                    payload: true\r\n                })\r\n                \r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n                \r\n            })\r\n    \r\n    \r\n        }\r\n    \r\n\r\n    const handleLogin =  () => {\r\n        LoginwithFirebase( email , password) \r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div style={{margin:'30px'}}>\r\n        <Grid  container className={classes.container_login}>\r\n            <Grid item className={classes.banner_login} md={6} sm={6}>\r\n                <div className={classes.banner_title}>\r\n                    <Typography className={classes.logo_title}>Constructora</Typography>\r\n                    <Typography \r\n                    className={classes.logo_title}\r\n                    style={{textAlign:'end'}}>Futuro</Typography>\r\n                </div>\r\n            </Grid>\r\n            <Grid item md={6} sm={6} className={classes.form_login}>\r\n\r\n                    <div className={classes.form_title} >\r\n                        <Typography className={classes.form_text_title}>Bienvenido</Typography>\r\n                        <Typography style={{fontSize:'36px'}}>a tu </Typography>\r\n                        <Typography className={classes.form_text_title}>Administrador</Typography>\r\n\r\n                    </div>\r\n                    <br></br>\r\n                    <TextField\r\n                    type=\"email\"\r\n                    label=\"Correo Electrónico\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese correo electrónico\"\r\n                    onChange={handleChange}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    // autoComplete=\"off\"\r\n                    />\r\n                    <br></br>\r\n                    <TextField\r\n                    type=\"password\"\r\n                    label=\"Contraseña\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese contraseña\"\r\n                    onChange={handleChange}\r\n                    name=\"password\"\r\n                    value={password}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                    <br></br>\r\n                    <ButtonPrimary text=\"Ingresar\" onClick={handleLogin}/>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FormLogin\r\n","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\FormLogin\\FormLogin.css.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\ButtonPrimary\\ButtonPrimary.css.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\firebase\\firebase.config.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\actions\\userAction.jsx",["205","206"],"import { useContext } from 'react'\r\nimport { userContext } from '../context/userContext'\r\n\r\n\r\n\r\n\r\nexport const ActionLogin = (uid,type) => {\r\n\r\n}","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\routers\\admin.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\routers\\login.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\routes\\loginRoute.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\RIS.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.jsx",["207"],"import {\r\n    AppBar,\r\n    IconButton,\r\n    Toolbar,\r\n    Typography,\r\n}from \"@material-ui/core\";\r\nimport React , { useContext }from \"react\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { useStylesAppbar } from \"./Appbar.css\";\r\nimport { userContext } from \"../../context/userContext\";\r\nimport { LOGOUT_USER } from \"../../types/userTypes\"\r\n  \r\n    const Appbar = (props) => {\r\n\r\n    const { open, setOpen } = props;\r\n\r\n    const classes =  useStylesAppbar();\r\n\r\n    const { dispatch } = useContext(userContext)\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n      dispatch({\r\n        type:LOGOUT_USER,\r\n        payload:false\r\n      })\r\n    }\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"secondary\" className={classes.appbar}>\r\n          <Toolbar>\r\n            <IconButton color=\"inherit\" aria-label=\"menu\" onClick={handleOpen}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h3\" className={classes.title} style={{marginLeft:'10px'}}>\r\n                <div className={classes.banner_title}>\r\n                        <Typography className={classes.logo_title}>Constructora</Typography>\r\n                        <Typography \r\n                        className={classes.logo_title}\r\n                        style={{textAlign:'end'}}>Futuro</Typography>\r\n                </div>\r\n            </Typography>\r\n            <IconButton color=\"inherit\" onClick={handleLogout} >\r\n              <ExitToAppIcon></ExitToAppIcon>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Appbar;\r\n  ","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Menu\\Menu.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Appbar\\Appbar.css.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Drawe\\Drawe.css.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Menu\\Menu.css.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\Steppers\\Steppers.css.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.jsx",["208"],"import React , { useState, useEffect, useContext }from 'react'\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { useStylesSteppTwo } from './SteepTwo.css'\r\nimport { workContext } from '../../context/workContext';\r\nimport { STEPTWO_WORK } from '../../types/workTypes';\r\n\r\nconst SteepTwo = ({handleNext}) => {\r\n\r\n    const classes = useStylesSteppTwo()\r\n\r\n    const [data, setdata] = useState({\r\n        datos :[]\r\n    })\r\n\r\n    const [workers, setworkers] = useState({\r\n        obreros:[],\r\n        obrerosname:[]\r\n    })\r\n\r\n    const array = []\r\n\r\n    const {dispatchwork} = useContext(workContext)\r\n\r\n\r\n    const addArray = (array) =>{\r\n        setdata({\r\n            datos:array\r\n        })\r\n    }\r\n\r\n    const getValue = (e) =>{\r\n        console.log(e.target.value)\r\n        const exist = workers.obreros.some(item => item === e.target.value)\r\n        const existname = workers.obrerosname.some(item => item === e.target.name)\r\n\r\n        if(exist && existname){\r\n            const filter = workers.obreros.filter(item => item !== e.target.value)\r\n            const filtername = workers.obrerosname.filter(item => item !== e.target.name)\r\n            setworkers({\r\n                ...workers,\r\n                obreros:filter,\r\n                obrerosname:filtername\r\n            })\r\n\r\n        }else{\r\n            setworkers({\r\n                ...workers,\r\n                obreros:[...workers.obreros,e.target.value],\r\n                obrerosname:[...workers.obrerosname,e.target.name]\r\n\r\n            })\r\n        }             \r\n    }\r\n\r\n    console.log(workers) \r\n\r\n    const handleEnvio = async () =>{\r\n\r\n        await dispatchwork({\r\n            type: STEPTWO_WORK,\r\n            payload:{\r\n                workers: workers.obreros,\r\n                workersname: workers.obrerosname,\r\n                totalworkers: workers.obreros.length\r\n            }\r\n        })\r\n        handleNext()\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref('/obreros').once('value',function(snapshot){\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().dni\r\n                    let name = ChildSnapshot.val().name\r\n                    let lastname = ChildSnapshot.val().lastname\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name,\r\n                        lastname\r\n                    }\r\n                    array.push(objeto)\r\n                    console.log(array)\r\n                    addArray(array)\r\n                }\r\n            )\r\n        })\r\n    }, [])\r\n\r\n\r\n    console.log(data.datos)\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" color=\"initial\">Lista de obreros</Typography>\r\n            {\r\n               data.datos.map((item,index) => {\r\n                   return (\r\n                    <div style={{display:'flex',alignItems:'center'}} key={index}>\r\n                    <Checkbox \r\n                    color=\"primary\" \r\n                    value={item.numberdoc}\r\n                    name={`${item.name} ${item.lastname}`}\r\n                    onChange={(e)=>getValue(e)}></Checkbox>\r\n                    <Typography variant=\"body2\" color=\"initial\">{item.name} {item.lastname}</Typography>\r\n                    </div>\r\n                   )\r\n               }) \r\n            }\r\n             <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEnvio} className={classes.btncontinuar}>Continuar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepTwo\r\n","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.jsx",["209"],"/* eslint-disable eqeqeq */\r\nimport { Button, Grid, TextField } from '@material-ui/core'\r\nimport React , { useState , useEffect, useContext } from 'react'\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\n// import firebase from 'firebase/app';\r\n// import \"firebase/auth\";\r\n// import \"firebase/database\"\r\n\r\nimport { useStylesSteppOne } from './SteepOne.css'\r\nimport { workContext } from '../../context/workContext';\r\nimport { STEPONE_WORK } from '../../types/workTypes';\r\n\r\nconst SteepOne = ({handleNext,handleBack}) => {\r\n\r\n\r\n    const classes = useStylesSteppOne()\r\n\r\n    const [ obra, setObra ] = useState({\r\n        name:'',\r\n        day_init: new Date(),\r\n        day_final: new Date(),\r\n        hour_init: new Date(),\r\n        hour_final: new Date()\r\n    })\r\n\r\n    const handleChange = (e) =>{\r\n        setObra({\r\n            ...obra,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n        new Date()\r\n    );\r\n\r\n    const [selectedDate1, setSelectedDate1] = React.useState(\r\n        new Date()\r\n    );\r\n\r\n    const [selectedDate2, setSelectedDate2] = React.useState(\r\n        new Date()\r\n    );\r\n\r\n    const [selectedDate3, setSelectedDate3] = React.useState(\r\n        new Date()\r\n      );\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const handleDateChange1 = (date) => {\r\n        setSelectedDate1(date);\r\n    };\r\n    \r\n    const handleDateChange2 = (date) => {\r\n        setSelectedDate2(date);\r\n    };\r\n\r\n    const handleDateChange3 = (date) => {\r\n        setSelectedDate3(date);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setObra({\r\n          ...obra,\r\n          day_init: selectedDate,\r\n          day_final: selectedDate1,\r\n          hour_init: selectedDate2,\r\n          hour_final: selectedDate3,\r\n        });\r\n      }, [selectedDate,selectedDate1,selectedDate2,selectedDate3]);\r\n\r\n\r\n    function getDateFormat(date) {\r\n        const newDate = new Date(date);\r\n        let year = newDate.getFullYear().toString();\r\n        let month = (newDate.getMonth() + 1).toString();\r\n        let day = newDate.getDate().toString();\r\n      \r\n        day.length == 1 && (day = '0' + day);\r\n        month.length == 1 && (month = '0' + month);\r\n        let yyyymmdd = day + '/' + month + '/' + year;\r\n    \r\n        return yyyymmdd;  \r\n      }\r\n      \r\n\r\n      function getDatetimeFormat(date) {\r\n        // let yyyymmdd = getDateFormat(date);\r\n        \r\n        const newDate = new Date(date)\r\n        let hour = '' + newDate.getHours();\r\n        if (hour.length == 1) {\r\n          hour = '0' + hour;\r\n        }\r\n      \r\n        let minute = '' + newDate.getMinutes();\r\n        if (minute.length == 1) {\r\n          minute = '0' + minute;\r\n        }\r\n      \r\n        let second = '' + newDate.getSeconds();\r\n        if (second.length == 1) {\r\n          second = '0' + second;\r\n        }\r\n      \r\n        // return yyyymmdd + ' ' + hour + ':' + minute + ':' + second;\r\n        return  hour + ':' + minute + ':' + second;\r\n    \r\n      }\r\n\r\n\r\n    const {dispatchwork} = useContext(workContext)\r\n\r\n\r\n    const handleEnvio = async () =>{\r\n\r\n        await dispatchwork({\r\n            type: STEPONE_WORK,\r\n            payload:{\r\n                namework: obra.name,\r\n                day_init: getDateFormat(obra.day_init),\r\n                day_final: getDateFormat(obra.day_final),\r\n                time_init: getDatetimeFormat(obra.hour_init),\r\n                time_final: getDatetimeFormat(obra.hour_final), \r\n            }\r\n        })\r\n\r\n        handleNext()\r\n\r\n        // const dateTime = Date.now();\r\n        // const timestamp = Math.floor(dateTime / 1000);\r\n\r\n        // firebase.database().ref('/obras/' + timestamp).set({\r\n        //     datefinished: getDateFormat(obra.day_final),\r\n        //     datestart: getDateFormat(obra.day_init),\r\n        //     id: timestamp,\r\n        //     name : obra.name,\r\n        //     timefinish: getDatetimeFormat(obra.hour_final),\r\n        //     timestart: getDatetimeFormat(obra.hour_init),\r\n        //   });\r\n    }\r\n    \r\n\r\n    // const [data,setData] = useState({\r\n    //     datos:[]\r\n    // })\r\n\r\n\r\n    // const array = []\r\n\r\n    // const algo = (array) =>{\r\n    //     setData({\r\n    //         datos:array\r\n    //     })\r\n    // }\r\n\r\n    // const intento = () =>{\r\n    //     firebase.database().ref('/obras').once('value',function(snapshot){\r\n    //         snapshot.forEach(\r\n    //             function(ChildSnapshot){\r\n    //                 let datefinished = ChildSnapshot.val().datefinished\r\n    //                 let name = ChildSnapshot.val().name\r\n    //                 let objeto ={\r\n    //                     datefinished,\r\n    //                     name\r\n    //                 }\r\n    //                 array.push(objeto)\r\n    //                 console.log(array)\r\n    //                 algo(array)\r\n    //             }\r\n    //         )\r\n    //     })\r\n    // }\r\n         \r\n    \r\n\r\n    return ( \r\n        <div style={{margin:'20px'}}>\r\n            <Grid container className={classes.containerfield}>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                    fullWidth={true}\r\n                    type=\"email\"\r\n                    label=\"Nombre de la obra \"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese nombre de la obra\"\r\n                    onChange={handleChange}\r\n                    name=\"name\"\r\n                    value={obra.name}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.containerfield} >\r\n                <Grid item xs={12} sm={6} md={6} >\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardDatePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            minDate={new Date()}\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            label=\"Fecha de inicio\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                            // name=\"day_init\"\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6} style={{display:'flex',justifyContent:'flex-end'}}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardDatePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            minDate={new Date()}\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            label=\"Fecha de fin\"\r\n                            value={selectedDate1}\r\n                            onChange={handleDateChange1}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                            name=\"day_final\"\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.containerfield} >\r\n                <Grid item xs={12} sm={6} md={6} >\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardTimePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            label=\"Hora de ingreso\"\r\n                            value={selectedDate2}\r\n                            onChange={handleDateChange2}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6} style={{display:'flex',justifyContent:'flex-end'}}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardTimePicker\r\n                            style={{width:'95%'}}\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            label=\"Hora de salida\"\r\n                            value={selectedDate3}\r\n                            onChange={handleDateChange3}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n                </Grid>\r\n            </Grid>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEnvio} className={classes.btncontinuar}>Continuar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepOne\r\n","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepThree\\SteepThree.jsx",["210"],"import { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\nimport { workContext } from '../../context/workContext';\r\nimport { STEPTHREE_WORK } from '../../types/workTypes';\r\n\r\n\r\nconst SteepThree = ({handleNext}) => {\r\n\r\n\r\n    const [data, setdata] = useState({\r\n        datos :[]\r\n    })\r\n\r\n    const [info,setInfo] = useState({\r\n        emailreport:'',\r\n        dniris:''\r\n    })\r\n\r\n    const array = []\r\n\r\n    const addArray = (array) =>{\r\n        setdata({\r\n            datos:array\r\n        })\r\n    }\r\n\r\n\r\n    const handleChange = (e) =>{\r\n        console.log(e.target.name)\r\n        setInfo({\r\n            ...info,\r\n            [e.target.name]:e.target.value\r\n        })\r\n      }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref('/RIS').once('value',function(snapshot){\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().id\r\n                    let name = ChildSnapshot.val().name\r\n                    // let lastname = ChildSnapshot.val().lastname\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name,\r\n                        // lastname\r\n                    }\r\n                    array.push(objeto)\r\n                    console.log(array)\r\n                    addArray(array)\r\n                }\r\n            )\r\n        })\r\n    }, [])\r\n\r\n    const {dispatchwork} = React.useContext(workContext)\r\n\r\n    const handleEnvio = () => {\r\n        dispatchwork({\r\n            type: STEPTHREE_WORK,\r\n            payload:{\r\n                workris: info.dniris,\r\n                emailreport: info.emailreport\r\n            }\r\n        })\r\n        handleNext()\r\n    }\r\n\r\n    console.log(info)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container >\r\n                <Grid item xs={12} md={12} sm={12}>\r\n                    <TextField\r\n                    fullWidth={true}\r\n                    type=\"email\"\r\n                    label=\"Correo electronico para reportes\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ingrese correo electronico\"\r\n                    onChange={handleChange}\r\n                    name=\"emailreport\"\r\n                    value={info.emailreport}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <br></br>\r\n            <Grid container >\r\n                <Grid item xs={12} md={12} sm={12}>\r\n                    <FormControl variant=\"outlined\" fullWidth={true}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Encargado de Asistencia\r\n                        </InputLabel>\r\n                        <Select\r\n                            value={info.dniris}\r\n                            onChange={handleChange}\r\n                            label=\"Encargado de Asistencia\"\r\n                            name=\"dniris\"\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                            <em>Escoger encargado</em>\r\n                            </MenuItem>\r\n                            {\r\n                               data.datos.map((item,index) => {\r\n                                return(\r\n                                    <MenuItem value={item.numberdoc} key={index} >{item.name}</MenuItem>\r\n                                )\r\n                               }) \r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <br></br>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                <Button variant=\"contained\" color=\"primary\" \r\n                onClick={handleEnvio} \r\n                // className={classes.btncontinuar}\r\n                >Continuar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepThree\r\n","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\Reportes.jsx",["211","212","213"],"import React from 'react'\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\n\r\nconst Reportes = () => {\r\n\r\n    const [data, setdata] = React.useState({\r\n        datos :[]\r\n    })        \r\n    const [info,setInfo] = React.useState({\r\n        emailreport:'',\r\n        dniris:''\r\n    })\r\n\r\n    const array = []\r\n\r\n    const addArray = (array) =>{\r\n        setdata({\r\n            datos:array\r\n        })\r\n    }\r\n\r\n    \r\n    const handleChange = (e) =>{\r\n\r\n        console.log(e.target.value)\r\n        firebase.database().ref('/obras').child(e.target.value).once('value',function(snapshot){\r\n            console.log('entra')\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().asistencia\r\n                    let name = ChildSnapshot.val().name\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name\r\n                    }\r\n                    console.log(numberdoc)\r\n                   \r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        firebase.database().ref('/obras').once('value',function(snapshot){\r\n            snapshot.forEach(\r\n                function(ChildSnapshot){\r\n                    let numberdoc = ChildSnapshot.val().id\r\n                    let name = ChildSnapshot.val().name\r\n                    let asistencia = ChildSnapshot.val().asistencia\r\n                    let objeto ={\r\n                        numberdoc,\r\n                        name,\r\n                        asistencia\r\n                    }\r\n                    console.log(numberdoc)\r\n                    console.log(asistencia)\r\n                    array.push(objeto)\r\n                    // console.log(array)\r\n                    addArray(array)\r\n                }\r\n            )\r\n        })\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div style={{maxWidth:900,margin:'auto'}}>\r\n                <FormControl variant=\"outlined\" fullWidth={true}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Encargado de Asistencia\r\n                        </InputLabel>\r\n                        <Select\r\n                            value={info.dniris}\r\n                            onChange={handleChange}\r\n                            label=\"Encargado de Asistencia\"\r\n                            name=\"dniris\"\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                            <em>Escoger encargado</em>\r\n                            </MenuItem>\r\n                            {\r\n                               data.datos.map((item,index) => {\r\n                                return(\r\n                                    <MenuItem value={item.numberdoc} key={index} >{item.name}</MenuItem>\r\n                                )\r\n                               }) \r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reportes\r\n","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\views\\Worker.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\FormWorker\\FormWorker.jsx",["214","215","216"],"import { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'\r\nimport React , { useState, useEffect } from 'react'\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nconst FormWorker = () => {\r\n\r\n    const [worker, setWorker] = useState({\r\n      name:'',\r\n      lastname:'',\r\n      dayborn: new Date(),\r\n      typedoc:'',\r\n      numberdoc:'',\r\n      category:'',\r\n      status:''\r\n    })\r\n    \r\n    const [selectedDate, setSelectedDate] = React.useState(\r\n      new Date()\r\n    );\r\n\r\n    const handleDateChange = (date) => {\r\n      setSelectedDate(date);\r\n    };\r\n\r\n    useEffect(() => {\r\n      setWorker({\r\n        ...worker,\r\n        dayborn: selectedDate,\r\n\r\n      });\r\n    }, [selectedDate]);\r\n\r\n\r\n    const handleChange = (e) =>{\r\n      setWorker({\r\n          ...worker,\r\n          [e.target.name]:e.target.value\r\n      })\r\n    }\r\n\r\n\r\n    console.log(worker)\r\n\r\n\r\n    function getDateFormat(date) {\r\n      const newDate = new Date(date);\r\n      let year = newDate.getFullYear().toString();\r\n      let month = (newDate.getMonth() + 1).toString();\r\n      let day = newDate.getDate().toString();\r\n    \r\n      day.length == 1 && (day = '0' + day);\r\n      month.length == 1 && (month = '0' + month);\r\n      let yyyymmdd = day + '/' + month + '/' + year;\r\n  \r\n      return yyyymmdd;  \r\n    }\r\n\r\n    const handleNewWorker = () => {\r\n\r\n      // firebase.database().ref('obreros').child(worker.numberdoc).on()\r\n\r\n      // firebase.database().ref('/obreros/' + worker.numberdoc).once('value')\r\n      // .then((snapshot)=>{\r\n      //   if(snapshot.exists){\r\n\r\n      //   }else{\r\n          \r\n      //   }\r\n      // })\r\n      \r\n      firebase.database().ref('/obreros/' + worker.numberdoc).set({\r\n        typedoc: worker.typedoc,\r\n        dayborn: getDateFormat(worker.dayborn),\r\n        dni: worker.numberdoc,\r\n        name : worker.name,\r\n        lastname: worker.lastname,\r\n        obraid:'',\r\n        category:worker.category,\r\n        status:worker.status\r\n      }).catch(error =>{\r\n        console.log(error)\r\n      })\r\n      \r\n      \r\n      \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <div style={{margin:'20px'}}>\r\n        <Grid container spacing={2} style={{padding:'15px 0px'}}>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              fullWidth={true}\r\n              type=\"email\"\r\n              label=\"Nombres del obrero\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ingrese nombres del obrero\"\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              value={worker.name}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              fullWidth={true}\r\n              type=\"email\"\r\n              label=\"Apellidos del obrero\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ingrese apellidos del obrero\"\r\n              onChange={handleChange}\r\n              name=\"lastname\"\r\n              value={worker.lastname}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} >\r\n            <Grid item md={6} sm={6} xs={12}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                        <KeyboardDatePicker\r\n                            style={{width:'100%'}}\r\n                            autoOk\r\n                            minDate={new Date()}\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            label=\"Fecha de nacimiento\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                            }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>  \r\n            </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} style={{padding:'15px 0px'}}>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Tipo de documento\r\n              </InputLabel>\r\n              <Select\r\n                value={worker.typedoc}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"typedoc\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger tipo de documento</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"DNI\">DNI</MenuItem>\r\n                <MenuItem value=\"Pasaporte\">Pasaporte</MenuItem>\r\n                <MenuItem value=\"Carnet de Extranjeria\">Carnet de Extranjeria</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              fullWidth={true}\r\n              type=\"email\"\r\n              label=\"Numero de documento\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ingrese numero de documento\"\r\n              onChange={handleChange}\r\n              name=\"numberdoc\"\r\n              value={worker.numberdoc}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} style={{padding:'15px 0px'}}>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Categoria\r\n              </InputLabel>\r\n              <Select\r\n                value={worker.category}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"category\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger categoria</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Albañil\">Albañil</MenuItem>\r\n                <MenuItem value=\"Carpintero\">Carpintero</MenuItem>\r\n                <MenuItem value=\"Electricista\">Electricista</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth={true}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Estado\r\n              </InputLabel>\r\n              <Select\r\n                value={worker.status}\r\n                onChange={handleChange}\r\n                label=\"Tipo de documento\"\r\n                name=\"status\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>Escoger estado</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Activo\">Activo</MenuItem>\r\n                <MenuItem value=\"De baja\">De baja</MenuItem>\r\n                <MenuItem value=\"Suspendido\">Suspendido</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{display:'flex',justifyContent:'center'}}>\r\n          <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          onClick={handleNewWorker}>Registrar Obrero</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default FormWorker\r\n","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepOne\\SteepOne.css.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\reducer\\workReducer.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\state\\workState.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\context\\workContext.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\types\\workTypes.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepTwo\\SteepTwo.css.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.jsx",["217"],"\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { workContext } from '../../context/workContext'\r\nimport ButtonPrimary from '../ButtonPrimary/ButtonPrimary'\r\nimport { useStylesSteepComplete } from './SteepComplete.css'\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nconst SteepComplete = ({handleReset}) => {\r\n\r\n\r\n    const {workinit} = React.useContext(workContext)\r\n    \r\n\r\n    const classes= useStylesSteepComplete()\r\n\r\n    const handleConfirm = () => {\r\n\r\n        const dateTime = Date.now();\r\n        const timestamp = Math.floor(dateTime / 1000);\r\n\r\n        firebase.database().ref('/obras/' + timestamp).set({\r\n            datefinished: workinit.day_init,\r\n            datestart: workinit.day_final,\r\n            id: timestamp,\r\n            name : workinit.namework,\r\n            timefinish: workinit.time_init,\r\n            timestart: workinit.time_final,\r\n          });\r\n\r\n        for(const dni of workinit.workers){\r\n            firebase.database().ref(\"obreros\").child(dni).child(\"obraid\").set(timestamp)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Typography className={classes.title}>{workinit.namework}</Typography>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Fecha Inicial:</strong> {workinit.day_init}\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Fecha Final:</strong> {workinit.day_final}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Hora de Entrada:</strong> {workinit.time_init}\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Hora de Salida:</strong> {workinit.time_final}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Encargado de Asistencia:</strong> {workinit.workris}\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditem}>\r\n                    <strong>Email para Reportes:</strong> {workinit.emailreport}\r\n                </Grid>\r\n            </Grid>\r\n            <Typography className={classes.grid} style={{textAlign:'center'}}><strong>Obreros</strong></Typography>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={6} className={classes.griditem}>\r\n                    <Typography><strong>Nombre</strong></Typography>\r\n                    {\r\n                        workinit.workersname.map(item =>{\r\n                            return <Typography>{item}</Typography>\r\n                        })\r\n                    }\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={6} className={classes.griditem}>\r\n                    <Typography><strong>DNI</strong></Typography>\r\n                    {\r\n                        workinit.workers.map(item =>{\r\n                            return <Typography>{item}</Typography>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.grid}>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditembtn}>\r\n                    <ButtonPrimary text=\"Confirmar\" onClick={handleConfirm}></ButtonPrimary>\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12} className={classes.griditembtn}>\r\n                    <ButtonPrimary text=\"Rehacer\" onClick={handleReset}></ButtonPrimary>\r\n                </Grid>\r\n            </Grid>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteepComplete\r\n","C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\components\\SteepComplete\\SteepComplete.css.jsx",[],"C:\\Users\\pc\\Desktop\\constructorapp-frontend\\src\\helpers\\textDate.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"218","replacedBy":"222"},{"ruleId":"220","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":4,"column":10,"nodeType":"226","messageId":"227","endLine":4,"endColumn":27},{"ruleId":"224","severity":1,"message":"228","line":4,"column":29,"nodeType":"226","messageId":"227","endLine":4,"endColumn":37},{"ruleId":"224","severity":1,"message":"229","line":12,"column":56,"nodeType":"226","messageId":"227","endLine":12,"endColumn":67},{"ruleId":"224","severity":1,"message":"230","line":1,"column":10,"nodeType":"226","messageId":"227","endLine":1,"endColumn":20},{"ruleId":"224","severity":1,"message":"231","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":21},{"ruleId":"224","severity":1,"message":"232","line":16,"column":13,"nodeType":"226","messageId":"227","endLine":16,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":97,"column":8,"nodeType":"235","endLine":97,"endColumn":10,"suggestions":"236"},{"ruleId":"233","severity":1,"message":"237","line":81,"column":10,"nodeType":"235","endLine":81,"endColumn":66,"suggestions":"238"},{"ruleId":"233","severity":1,"message":"234","line":62,"column":8,"nodeType":"235","endLine":62,"endColumn":10,"suggestions":"239"},{"ruleId":"224","severity":1,"message":"240","line":13,"column":17,"nodeType":"226","messageId":"227","endLine":13,"endColumn":24},{"ruleId":"224","severity":1,"message":"241","line":36,"column":25,"nodeType":"226","messageId":"227","endLine":36,"endColumn":31},{"ruleId":"233","severity":1,"message":"242","line":70,"column":8,"nodeType":"235","endLine":70,"endColumn":10,"suggestions":"243"},{"ruleId":"233","severity":1,"message":"244","line":42,"column":8,"nodeType":"235","endLine":42,"endColumn":22,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":62,"column":18,"nodeType":"248","messageId":"249","endLine":62,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":63,"column":20,"nodeType":"248","messageId":"249","endLine":63,"endColumn":22},{"ruleId":"224","severity":1,"message":"250","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":16},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],["251"],["252"],"no-unused-vars","'LoginwithFirebase' is defined but never used.","Identifier","unusedVar","'UserType' is defined but never used.","'LOGOUT_USER' is defined but never used.","'useContext' is defined but never used.","'userContext' is defined but never used.","'open' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'array'. Either include it or remove the dependency array.","ArrayExpression",["253"],"React Hook useEffect has a missing dependency: 'obra'. Either include it or remove the dependency array. You can also do a functional update 'setObra(o => ...)' if you only need 'obra' in the 'setObra' call.",["254"],["255"],"'setInfo' is assigned a value but never used.","'objeto' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'array'. Either include it or remove the dependency array.",["256"],"React Hook useEffect has a missing dependency: 'worker'. Either include it or remove the dependency array. You can also do a functional update 'setWorker(w => ...)' if you only need 'worker' in the 'setWorker' call.",["257"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"258","fix":"262"},{"desc":"258","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [array]",{"range":"266","text":"267"},"Update the dependencies array to be: [obra, selectedDate, selectedDate1, selectedDate2, selectedDate3]",{"range":"268","text":"269"},{"range":"270","text":"267"},{"range":"271","text":"267"},"Update the dependencies array to be: [selectedDate, worker]",{"range":"272","text":"273"},[2796,2798],"[array]",[2030,2086],"[obra, selectedDate, selectedDate1, selectedDate2, selectedDate3]",[1572,1574],[1987,1989],[966,980],"[selectedDate, worker]"]